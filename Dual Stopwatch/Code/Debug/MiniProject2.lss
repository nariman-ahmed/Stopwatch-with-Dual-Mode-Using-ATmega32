
MiniProject2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001f34  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00001f34  00001fc8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000f  0080006a  0080006a  00001fd2  2**0
                  ALLOC
  3 .stab         000012fc  00000000  00000000  00001fd4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000892  00000000  00000000  000032d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00003b62  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00003ca2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00003e12  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00005a5b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  00006946  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  000076f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  00007854  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00007ae1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  000082af  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 70 0b 	jmp	0x16e0	; 0x16e0 <__vector_1>
       8:	0c 94 ad 0b 	jmp	0x175a	; 0x175a <__vector_2>
       c:	0c 94 7c 0c 	jmp	0x18f8	; 0x18f8 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 3a 0b 	jmp	0x1674	; 0x1674 <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e3       	ldi	r30, 0x34	; 52
      68:	ff e1       	ldi	r31, 0x1F	; 31
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 36       	cpi	r26, 0x6A	; 106
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	aa e6       	ldi	r26, 0x6A	; 106
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a9 37       	cpi	r26, 0x79	; 121
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 9f 0c 	call	0x193e	; 0x193e <main>
      8a:	0c 94 98 0f 	jmp	0x1f30	; 0x1f30 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 61 0f 	jmp	0x1ec2	; 0x1ec2 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 7d 0f 	jmp	0x1efa	; 0x1efa <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 6d 0f 	jmp	0x1eda	; 0x1eda <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 89 0f 	jmp	0x1f12	; 0x1f12 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 6d 0f 	jmp	0x1eda	; 0x1eda <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 89 0f 	jmp	0x1f12	; 0x1f12 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 61 0f 	jmp	0x1ec2	; 0x1ec2 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 7d 0f 	jmp	0x1efa	; 0x1efa <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 6d 0f 	jmp	0x1eda	; 0x1eda <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 89 0f 	jmp	0x1f12	; 0x1f12 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 6d 0f 	jmp	0x1eda	; 0x1eda <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 89 0f 	jmp	0x1f12	; 0x1f12 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 6d 0f 	jmp	0x1eda	; 0x1eda <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 89 0f 	jmp	0x1f12	; 0x1f12 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 71 0f 	jmp	0x1ee2	; 0x1ee2 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <show_segments>:
unsigned char timer_mode_flag=1;
//timer mode flag states counting up
unsigned char ISR_countUp_flag=0;
unsigned char ISR_countDown_flag=0;

void show_segments(void){
     b46:	0f 93       	push	r16
     b48:	1f 93       	push	r17
     b4a:	df 93       	push	r29
     b4c:	cf 93       	push	r28
     b4e:	cd b7       	in	r28, 0x3d	; 61
     b50:	de b7       	in	r29, 0x3e	; 62
     b52:	c4 55       	subi	r28, 0x54	; 84
     b54:	d0 40       	sbci	r29, 0x00	; 0
     b56:	0f b6       	in	r0, 0x3f	; 63
     b58:	f8 94       	cli
     b5a:	de bf       	out	0x3e, r29	; 62
     b5c:	0f be       	out	0x3f, r0	; 63
     b5e:	cd bf       	out	0x3d, r28	; 61

	/*Function to show all 7 segments simultaneously it isn't dependent on timer mode
	illusion done by enabling one segment after the other with 5ms delay between */

	//second units
	PORTA|=(1<<0);
     b60:	ab e3       	ldi	r26, 0x3B	; 59
     b62:	b0 e0       	ldi	r27, 0x00	; 0
     b64:	eb e3       	ldi	r30, 0x3B	; 59
     b66:	f0 e0       	ldi	r31, 0x00	; 0
     b68:	80 81       	ld	r24, Z
     b6a:	81 60       	ori	r24, 0x01	; 1
     b6c:	8c 93       	st	X, r24
	PORTC=(PORTC&0xF0)|(sec0&0x0F);
     b6e:	a5 e3       	ldi	r26, 0x35	; 53
     b70:	b0 e0       	ldi	r27, 0x00	; 0
     b72:	e5 e3       	ldi	r30, 0x35	; 53
     b74:	f0 e0       	ldi	r31, 0x00	; 0
     b76:	80 81       	ld	r24, Z
     b78:	28 2f       	mov	r18, r24
     b7a:	20 7f       	andi	r18, 0xF0	; 240
     b7c:	80 91 6c 00 	lds	r24, 0x006C
     b80:	90 91 6d 00 	lds	r25, 0x006D
     b84:	8f 70       	andi	r24, 0x0F	; 15
     b86:	82 2b       	or	r24, r18
     b88:	8c 93       	st	X, r24
     b8a:	fe 01       	movw	r30, r28
     b8c:	ef 5a       	subi	r30, 0xAF	; 175
     b8e:	ff 4f       	sbci	r31, 0xFF	; 255
     b90:	80 e0       	ldi	r24, 0x00	; 0
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	a0 ea       	ldi	r26, 0xA0	; 160
     b96:	b0 e4       	ldi	r27, 0x40	; 64
     b98:	80 83       	st	Z, r24
     b9a:	91 83       	std	Z+1, r25	; 0x01
     b9c:	a2 83       	std	Z+2, r26	; 0x02
     b9e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ba0:	8e 01       	movw	r16, r28
     ba2:	03 5b       	subi	r16, 0xB3	; 179
     ba4:	1f 4f       	sbci	r17, 0xFF	; 255
     ba6:	fe 01       	movw	r30, r28
     ba8:	ef 5a       	subi	r30, 0xAF	; 175
     baa:	ff 4f       	sbci	r31, 0xFF	; 255
     bac:	60 81       	ld	r22, Z
     bae:	71 81       	ldd	r23, Z+1	; 0x01
     bb0:	82 81       	ldd	r24, Z+2	; 0x02
     bb2:	93 81       	ldd	r25, Z+3	; 0x03
     bb4:	20 e0       	ldi	r18, 0x00	; 0
     bb6:	30 e0       	ldi	r19, 0x00	; 0
     bb8:	4a e7       	ldi	r20, 0x7A	; 122
     bba:	55 e4       	ldi	r21, 0x45	; 69
     bbc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     bc0:	dc 01       	movw	r26, r24
     bc2:	cb 01       	movw	r24, r22
     bc4:	f8 01       	movw	r30, r16
     bc6:	80 83       	st	Z, r24
     bc8:	91 83       	std	Z+1, r25	; 0x01
     bca:	a2 83       	std	Z+2, r26	; 0x02
     bcc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     bce:	fe 01       	movw	r30, r28
     bd0:	e3 5b       	subi	r30, 0xB3	; 179
     bd2:	ff 4f       	sbci	r31, 0xFF	; 255
     bd4:	60 81       	ld	r22, Z
     bd6:	71 81       	ldd	r23, Z+1	; 0x01
     bd8:	82 81       	ldd	r24, Z+2	; 0x02
     bda:	93 81       	ldd	r25, Z+3	; 0x03
     bdc:	20 e0       	ldi	r18, 0x00	; 0
     bde:	30 e0       	ldi	r19, 0x00	; 0
     be0:	40 e8       	ldi	r20, 0x80	; 128
     be2:	5f e3       	ldi	r21, 0x3F	; 63
     be4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     be8:	88 23       	and	r24, r24
     bea:	44 f4       	brge	.+16     	; 0xbfc <show_segments+0xb6>
		__ticks = 1;
     bec:	fe 01       	movw	r30, r28
     bee:	e5 5b       	subi	r30, 0xB5	; 181
     bf0:	ff 4f       	sbci	r31, 0xFF	; 255
     bf2:	81 e0       	ldi	r24, 0x01	; 1
     bf4:	90 e0       	ldi	r25, 0x00	; 0
     bf6:	91 83       	std	Z+1, r25	; 0x01
     bf8:	80 83       	st	Z, r24
     bfa:	64 c0       	rjmp	.+200    	; 0xcc4 <show_segments+0x17e>
	else if (__tmp > 65535)
     bfc:	fe 01       	movw	r30, r28
     bfe:	e3 5b       	subi	r30, 0xB3	; 179
     c00:	ff 4f       	sbci	r31, 0xFF	; 255
     c02:	60 81       	ld	r22, Z
     c04:	71 81       	ldd	r23, Z+1	; 0x01
     c06:	82 81       	ldd	r24, Z+2	; 0x02
     c08:	93 81       	ldd	r25, Z+3	; 0x03
     c0a:	20 e0       	ldi	r18, 0x00	; 0
     c0c:	3f ef       	ldi	r19, 0xFF	; 255
     c0e:	4f e7       	ldi	r20, 0x7F	; 127
     c10:	57 e4       	ldi	r21, 0x47	; 71
     c12:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     c16:	18 16       	cp	r1, r24
     c18:	0c f0       	brlt	.+2      	; 0xc1c <show_segments+0xd6>
     c1a:	43 c0       	rjmp	.+134    	; 0xca2 <show_segments+0x15c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c1c:	fe 01       	movw	r30, r28
     c1e:	ef 5a       	subi	r30, 0xAF	; 175
     c20:	ff 4f       	sbci	r31, 0xFF	; 255
     c22:	60 81       	ld	r22, Z
     c24:	71 81       	ldd	r23, Z+1	; 0x01
     c26:	82 81       	ldd	r24, Z+2	; 0x02
     c28:	93 81       	ldd	r25, Z+3	; 0x03
     c2a:	20 e0       	ldi	r18, 0x00	; 0
     c2c:	30 e0       	ldi	r19, 0x00	; 0
     c2e:	40 e2       	ldi	r20, 0x20	; 32
     c30:	51 e4       	ldi	r21, 0x41	; 65
     c32:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     c36:	dc 01       	movw	r26, r24
     c38:	cb 01       	movw	r24, r22
     c3a:	8e 01       	movw	r16, r28
     c3c:	05 5b       	subi	r16, 0xB5	; 181
     c3e:	1f 4f       	sbci	r17, 0xFF	; 255
     c40:	bc 01       	movw	r22, r24
     c42:	cd 01       	movw	r24, r26
     c44:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     c48:	dc 01       	movw	r26, r24
     c4a:	cb 01       	movw	r24, r22
     c4c:	f8 01       	movw	r30, r16
     c4e:	91 83       	std	Z+1, r25	; 0x01
     c50:	80 83       	st	Z, r24
     c52:	1f c0       	rjmp	.+62     	; 0xc92 <show_segments+0x14c>
     c54:	fe 01       	movw	r30, r28
     c56:	e7 5b       	subi	r30, 0xB7	; 183
     c58:	ff 4f       	sbci	r31, 0xFF	; 255
     c5a:	80 e9       	ldi	r24, 0x90	; 144
     c5c:	91 e0       	ldi	r25, 0x01	; 1
     c5e:	91 83       	std	Z+1, r25	; 0x01
     c60:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c62:	fe 01       	movw	r30, r28
     c64:	e7 5b       	subi	r30, 0xB7	; 183
     c66:	ff 4f       	sbci	r31, 0xFF	; 255
     c68:	80 81       	ld	r24, Z
     c6a:	91 81       	ldd	r25, Z+1	; 0x01
     c6c:	01 97       	sbiw	r24, 0x01	; 1
     c6e:	f1 f7       	brne	.-4      	; 0xc6c <show_segments+0x126>
     c70:	fe 01       	movw	r30, r28
     c72:	e7 5b       	subi	r30, 0xB7	; 183
     c74:	ff 4f       	sbci	r31, 0xFF	; 255
     c76:	91 83       	std	Z+1, r25	; 0x01
     c78:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c7a:	de 01       	movw	r26, r28
     c7c:	a5 5b       	subi	r26, 0xB5	; 181
     c7e:	bf 4f       	sbci	r27, 0xFF	; 255
     c80:	fe 01       	movw	r30, r28
     c82:	e5 5b       	subi	r30, 0xB5	; 181
     c84:	ff 4f       	sbci	r31, 0xFF	; 255
     c86:	80 81       	ld	r24, Z
     c88:	91 81       	ldd	r25, Z+1	; 0x01
     c8a:	01 97       	sbiw	r24, 0x01	; 1
     c8c:	11 96       	adiw	r26, 0x01	; 1
     c8e:	9c 93       	st	X, r25
     c90:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c92:	fe 01       	movw	r30, r28
     c94:	e5 5b       	subi	r30, 0xB5	; 181
     c96:	ff 4f       	sbci	r31, 0xFF	; 255
     c98:	80 81       	ld	r24, Z
     c9a:	91 81       	ldd	r25, Z+1	; 0x01
     c9c:	00 97       	sbiw	r24, 0x00	; 0
     c9e:	d1 f6       	brne	.-76     	; 0xc54 <show_segments+0x10e>
     ca0:	27 c0       	rjmp	.+78     	; 0xcf0 <show_segments+0x1aa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ca2:	8e 01       	movw	r16, r28
     ca4:	05 5b       	subi	r16, 0xB5	; 181
     ca6:	1f 4f       	sbci	r17, 0xFF	; 255
     ca8:	fe 01       	movw	r30, r28
     caa:	e3 5b       	subi	r30, 0xB3	; 179
     cac:	ff 4f       	sbci	r31, 0xFF	; 255
     cae:	60 81       	ld	r22, Z
     cb0:	71 81       	ldd	r23, Z+1	; 0x01
     cb2:	82 81       	ldd	r24, Z+2	; 0x02
     cb4:	93 81       	ldd	r25, Z+3	; 0x03
     cb6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     cba:	dc 01       	movw	r26, r24
     cbc:	cb 01       	movw	r24, r22
     cbe:	f8 01       	movw	r30, r16
     cc0:	91 83       	std	Z+1, r25	; 0x01
     cc2:	80 83       	st	Z, r24
     cc4:	de 01       	movw	r26, r28
     cc6:	a9 5b       	subi	r26, 0xB9	; 185
     cc8:	bf 4f       	sbci	r27, 0xFF	; 255
     cca:	fe 01       	movw	r30, r28
     ccc:	e5 5b       	subi	r30, 0xB5	; 181
     cce:	ff 4f       	sbci	r31, 0xFF	; 255
     cd0:	80 81       	ld	r24, Z
     cd2:	91 81       	ldd	r25, Z+1	; 0x01
     cd4:	8d 93       	st	X+, r24
     cd6:	9c 93       	st	X, r25
     cd8:	fe 01       	movw	r30, r28
     cda:	e9 5b       	subi	r30, 0xB9	; 185
     cdc:	ff 4f       	sbci	r31, 0xFF	; 255
     cde:	80 81       	ld	r24, Z
     ce0:	91 81       	ldd	r25, Z+1	; 0x01
     ce2:	01 97       	sbiw	r24, 0x01	; 1
     ce4:	f1 f7       	brne	.-4      	; 0xce2 <show_segments+0x19c>
     ce6:	fe 01       	movw	r30, r28
     ce8:	e9 5b       	subi	r30, 0xB9	; 185
     cea:	ff 4f       	sbci	r31, 0xFF	; 255
     cec:	91 83       	std	Z+1, r25	; 0x01
     cee:	80 83       	st	Z, r24
	_delay_ms(5);
	PORTA&=~0x3F; //e2fely all
     cf0:	ab e3       	ldi	r26, 0x3B	; 59
     cf2:	b0 e0       	ldi	r27, 0x00	; 0
     cf4:	eb e3       	ldi	r30, 0x3B	; 59
     cf6:	f0 e0       	ldi	r31, 0x00	; 0
     cf8:	80 81       	ld	r24, Z
     cfa:	80 7c       	andi	r24, 0xC0	; 192
     cfc:	8c 93       	st	X, r24

	//seconds tens
	PORTA|=(1<<1);
     cfe:	ab e3       	ldi	r26, 0x3B	; 59
     d00:	b0 e0       	ldi	r27, 0x00	; 0
     d02:	eb e3       	ldi	r30, 0x3B	; 59
     d04:	f0 e0       	ldi	r31, 0x00	; 0
     d06:	80 81       	ld	r24, Z
     d08:	82 60       	ori	r24, 0x02	; 2
     d0a:	8c 93       	st	X, r24
	PORTC=(PORTC&0xF0)|(sec1&0x0F);
     d0c:	a5 e3       	ldi	r26, 0x35	; 53
     d0e:	b0 e0       	ldi	r27, 0x00	; 0
     d10:	e5 e3       	ldi	r30, 0x35	; 53
     d12:	f0 e0       	ldi	r31, 0x00	; 0
     d14:	80 81       	ld	r24, Z
     d16:	28 2f       	mov	r18, r24
     d18:	20 7f       	andi	r18, 0xF0	; 240
     d1a:	80 91 6a 00 	lds	r24, 0x006A
     d1e:	90 91 6b 00 	lds	r25, 0x006B
     d22:	8f 70       	andi	r24, 0x0F	; 15
     d24:	82 2b       	or	r24, r18
     d26:	8c 93       	st	X, r24
     d28:	fe 01       	movw	r30, r28
     d2a:	ed 5b       	subi	r30, 0xBD	; 189
     d2c:	ff 4f       	sbci	r31, 0xFF	; 255
     d2e:	80 e0       	ldi	r24, 0x00	; 0
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	a0 ea       	ldi	r26, 0xA0	; 160
     d34:	b0 e4       	ldi	r27, 0x40	; 64
     d36:	80 83       	st	Z, r24
     d38:	91 83       	std	Z+1, r25	; 0x01
     d3a:	a2 83       	std	Z+2, r26	; 0x02
     d3c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d3e:	8e 01       	movw	r16, r28
     d40:	01 5c       	subi	r16, 0xC1	; 193
     d42:	1f 4f       	sbci	r17, 0xFF	; 255
     d44:	fe 01       	movw	r30, r28
     d46:	ed 5b       	subi	r30, 0xBD	; 189
     d48:	ff 4f       	sbci	r31, 0xFF	; 255
     d4a:	60 81       	ld	r22, Z
     d4c:	71 81       	ldd	r23, Z+1	; 0x01
     d4e:	82 81       	ldd	r24, Z+2	; 0x02
     d50:	93 81       	ldd	r25, Z+3	; 0x03
     d52:	20 e0       	ldi	r18, 0x00	; 0
     d54:	30 e0       	ldi	r19, 0x00	; 0
     d56:	4a e7       	ldi	r20, 0x7A	; 122
     d58:	55 e4       	ldi	r21, 0x45	; 69
     d5a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     d5e:	dc 01       	movw	r26, r24
     d60:	cb 01       	movw	r24, r22
     d62:	f8 01       	movw	r30, r16
     d64:	80 83       	st	Z, r24
     d66:	91 83       	std	Z+1, r25	; 0x01
     d68:	a2 83       	std	Z+2, r26	; 0x02
     d6a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d6c:	fe 01       	movw	r30, r28
     d6e:	ff 96       	adiw	r30, 0x3f	; 63
     d70:	60 81       	ld	r22, Z
     d72:	71 81       	ldd	r23, Z+1	; 0x01
     d74:	82 81       	ldd	r24, Z+2	; 0x02
     d76:	93 81       	ldd	r25, Z+3	; 0x03
     d78:	20 e0       	ldi	r18, 0x00	; 0
     d7a:	30 e0       	ldi	r19, 0x00	; 0
     d7c:	40 e8       	ldi	r20, 0x80	; 128
     d7e:	5f e3       	ldi	r21, 0x3F	; 63
     d80:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     d84:	88 23       	and	r24, r24
     d86:	2c f4       	brge	.+10     	; 0xd92 <show_segments+0x24c>
		__ticks = 1;
     d88:	81 e0       	ldi	r24, 0x01	; 1
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	9e af       	std	Y+62, r25	; 0x3e
     d8e:	8d af       	std	Y+61, r24	; 0x3d
     d90:	46 c0       	rjmp	.+140    	; 0xe1e <show_segments+0x2d8>
	else if (__tmp > 65535)
     d92:	fe 01       	movw	r30, r28
     d94:	ff 96       	adiw	r30, 0x3f	; 63
     d96:	60 81       	ld	r22, Z
     d98:	71 81       	ldd	r23, Z+1	; 0x01
     d9a:	82 81       	ldd	r24, Z+2	; 0x02
     d9c:	93 81       	ldd	r25, Z+3	; 0x03
     d9e:	20 e0       	ldi	r18, 0x00	; 0
     da0:	3f ef       	ldi	r19, 0xFF	; 255
     da2:	4f e7       	ldi	r20, 0x7F	; 127
     da4:	57 e4       	ldi	r21, 0x47	; 71
     da6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     daa:	18 16       	cp	r1, r24
     dac:	64 f5       	brge	.+88     	; 0xe06 <show_segments+0x2c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     dae:	fe 01       	movw	r30, r28
     db0:	ed 5b       	subi	r30, 0xBD	; 189
     db2:	ff 4f       	sbci	r31, 0xFF	; 255
     db4:	60 81       	ld	r22, Z
     db6:	71 81       	ldd	r23, Z+1	; 0x01
     db8:	82 81       	ldd	r24, Z+2	; 0x02
     dba:	93 81       	ldd	r25, Z+3	; 0x03
     dbc:	20 e0       	ldi	r18, 0x00	; 0
     dbe:	30 e0       	ldi	r19, 0x00	; 0
     dc0:	40 e2       	ldi	r20, 0x20	; 32
     dc2:	51 e4       	ldi	r21, 0x41	; 65
     dc4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     dc8:	dc 01       	movw	r26, r24
     dca:	cb 01       	movw	r24, r22
     dcc:	bc 01       	movw	r22, r24
     dce:	cd 01       	movw	r24, r26
     dd0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     dd4:	dc 01       	movw	r26, r24
     dd6:	cb 01       	movw	r24, r22
     dd8:	9e af       	std	Y+62, r25	; 0x3e
     dda:	8d af       	std	Y+61, r24	; 0x3d
     ddc:	0f c0       	rjmp	.+30     	; 0xdfc <show_segments+0x2b6>
     dde:	80 e9       	ldi	r24, 0x90	; 144
     de0:	91 e0       	ldi	r25, 0x01	; 1
     de2:	9c af       	std	Y+60, r25	; 0x3c
     de4:	8b af       	std	Y+59, r24	; 0x3b
     de6:	8b ad       	ldd	r24, Y+59	; 0x3b
     de8:	9c ad       	ldd	r25, Y+60	; 0x3c
     dea:	01 97       	sbiw	r24, 0x01	; 1
     dec:	f1 f7       	brne	.-4      	; 0xdea <show_segments+0x2a4>
     dee:	9c af       	std	Y+60, r25	; 0x3c
     df0:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     df2:	8d ad       	ldd	r24, Y+61	; 0x3d
     df4:	9e ad       	ldd	r25, Y+62	; 0x3e
     df6:	01 97       	sbiw	r24, 0x01	; 1
     df8:	9e af       	std	Y+62, r25	; 0x3e
     dfa:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     dfc:	8d ad       	ldd	r24, Y+61	; 0x3d
     dfe:	9e ad       	ldd	r25, Y+62	; 0x3e
     e00:	00 97       	sbiw	r24, 0x00	; 0
     e02:	69 f7       	brne	.-38     	; 0xdde <show_segments+0x298>
     e04:	16 c0       	rjmp	.+44     	; 0xe32 <show_segments+0x2ec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e06:	fe 01       	movw	r30, r28
     e08:	ff 96       	adiw	r30, 0x3f	; 63
     e0a:	60 81       	ld	r22, Z
     e0c:	71 81       	ldd	r23, Z+1	; 0x01
     e0e:	82 81       	ldd	r24, Z+2	; 0x02
     e10:	93 81       	ldd	r25, Z+3	; 0x03
     e12:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     e16:	dc 01       	movw	r26, r24
     e18:	cb 01       	movw	r24, r22
     e1a:	9e af       	std	Y+62, r25	; 0x3e
     e1c:	8d af       	std	Y+61, r24	; 0x3d
     e1e:	8d ad       	ldd	r24, Y+61	; 0x3d
     e20:	9e ad       	ldd	r25, Y+62	; 0x3e
     e22:	9a af       	std	Y+58, r25	; 0x3a
     e24:	89 af       	std	Y+57, r24	; 0x39
     e26:	89 ad       	ldd	r24, Y+57	; 0x39
     e28:	9a ad       	ldd	r25, Y+58	; 0x3a
     e2a:	01 97       	sbiw	r24, 0x01	; 1
     e2c:	f1 f7       	brne	.-4      	; 0xe2a <show_segments+0x2e4>
     e2e:	9a af       	std	Y+58, r25	; 0x3a
     e30:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(5);
	PORTA&=~0x3F;
     e32:	ab e3       	ldi	r26, 0x3B	; 59
     e34:	b0 e0       	ldi	r27, 0x00	; 0
     e36:	eb e3       	ldi	r30, 0x3B	; 59
     e38:	f0 e0       	ldi	r31, 0x00	; 0
     e3a:	80 81       	ld	r24, Z
     e3c:	80 7c       	andi	r24, 0xC0	; 192
     e3e:	8c 93       	st	X, r24

	//minutes units
	PORTA|=(1<<2);
     e40:	ab e3       	ldi	r26, 0x3B	; 59
     e42:	b0 e0       	ldi	r27, 0x00	; 0
     e44:	eb e3       	ldi	r30, 0x3B	; 59
     e46:	f0 e0       	ldi	r31, 0x00	; 0
     e48:	80 81       	ld	r24, Z
     e4a:	84 60       	ori	r24, 0x04	; 4
     e4c:	8c 93       	st	X, r24
	PORTC=(PORTC&0xF0)|(min0&0x0F);
     e4e:	a5 e3       	ldi	r26, 0x35	; 53
     e50:	b0 e0       	ldi	r27, 0x00	; 0
     e52:	e5 e3       	ldi	r30, 0x35	; 53
     e54:	f0 e0       	ldi	r31, 0x00	; 0
     e56:	80 81       	ld	r24, Z
     e58:	28 2f       	mov	r18, r24
     e5a:	20 7f       	andi	r18, 0xF0	; 240
     e5c:	80 91 70 00 	lds	r24, 0x0070
     e60:	90 91 71 00 	lds	r25, 0x0071
     e64:	8f 70       	andi	r24, 0x0F	; 15
     e66:	82 2b       	or	r24, r18
     e68:	8c 93       	st	X, r24
     e6a:	80 e0       	ldi	r24, 0x00	; 0
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	a0 ea       	ldi	r26, 0xA0	; 160
     e70:	b0 e4       	ldi	r27, 0x40	; 64
     e72:	8d ab       	std	Y+53, r24	; 0x35
     e74:	9e ab       	std	Y+54, r25	; 0x36
     e76:	af ab       	std	Y+55, r26	; 0x37
     e78:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e7a:	6d a9       	ldd	r22, Y+53	; 0x35
     e7c:	7e a9       	ldd	r23, Y+54	; 0x36
     e7e:	8f a9       	ldd	r24, Y+55	; 0x37
     e80:	98 ad       	ldd	r25, Y+56	; 0x38
     e82:	20 e0       	ldi	r18, 0x00	; 0
     e84:	30 e0       	ldi	r19, 0x00	; 0
     e86:	4a e7       	ldi	r20, 0x7A	; 122
     e88:	55 e4       	ldi	r21, 0x45	; 69
     e8a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     e8e:	dc 01       	movw	r26, r24
     e90:	cb 01       	movw	r24, r22
     e92:	89 ab       	std	Y+49, r24	; 0x31
     e94:	9a ab       	std	Y+50, r25	; 0x32
     e96:	ab ab       	std	Y+51, r26	; 0x33
     e98:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     e9a:	69 a9       	ldd	r22, Y+49	; 0x31
     e9c:	7a a9       	ldd	r23, Y+50	; 0x32
     e9e:	8b a9       	ldd	r24, Y+51	; 0x33
     ea0:	9c a9       	ldd	r25, Y+52	; 0x34
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	40 e8       	ldi	r20, 0x80	; 128
     ea8:	5f e3       	ldi	r21, 0x3F	; 63
     eaa:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     eae:	88 23       	and	r24, r24
     eb0:	2c f4       	brge	.+10     	; 0xebc <show_segments+0x376>
		__ticks = 1;
     eb2:	81 e0       	ldi	r24, 0x01	; 1
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	98 ab       	std	Y+48, r25	; 0x30
     eb8:	8f a7       	std	Y+47, r24	; 0x2f
     eba:	3f c0       	rjmp	.+126    	; 0xf3a <show_segments+0x3f4>
	else if (__tmp > 65535)
     ebc:	69 a9       	ldd	r22, Y+49	; 0x31
     ebe:	7a a9       	ldd	r23, Y+50	; 0x32
     ec0:	8b a9       	ldd	r24, Y+51	; 0x33
     ec2:	9c a9       	ldd	r25, Y+52	; 0x34
     ec4:	20 e0       	ldi	r18, 0x00	; 0
     ec6:	3f ef       	ldi	r19, 0xFF	; 255
     ec8:	4f e7       	ldi	r20, 0x7F	; 127
     eca:	57 e4       	ldi	r21, 0x47	; 71
     ecc:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     ed0:	18 16       	cp	r1, r24
     ed2:	4c f5       	brge	.+82     	; 0xf26 <show_segments+0x3e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ed4:	6d a9       	ldd	r22, Y+53	; 0x35
     ed6:	7e a9       	ldd	r23, Y+54	; 0x36
     ed8:	8f a9       	ldd	r24, Y+55	; 0x37
     eda:	98 ad       	ldd	r25, Y+56	; 0x38
     edc:	20 e0       	ldi	r18, 0x00	; 0
     ede:	30 e0       	ldi	r19, 0x00	; 0
     ee0:	40 e2       	ldi	r20, 0x20	; 32
     ee2:	51 e4       	ldi	r21, 0x41	; 65
     ee4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     ee8:	dc 01       	movw	r26, r24
     eea:	cb 01       	movw	r24, r22
     eec:	bc 01       	movw	r22, r24
     eee:	cd 01       	movw	r24, r26
     ef0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     ef4:	dc 01       	movw	r26, r24
     ef6:	cb 01       	movw	r24, r22
     ef8:	98 ab       	std	Y+48, r25	; 0x30
     efa:	8f a7       	std	Y+47, r24	; 0x2f
     efc:	0f c0       	rjmp	.+30     	; 0xf1c <show_segments+0x3d6>
     efe:	80 e9       	ldi	r24, 0x90	; 144
     f00:	91 e0       	ldi	r25, 0x01	; 1
     f02:	9e a7       	std	Y+46, r25	; 0x2e
     f04:	8d a7       	std	Y+45, r24	; 0x2d
     f06:	8d a5       	ldd	r24, Y+45	; 0x2d
     f08:	9e a5       	ldd	r25, Y+46	; 0x2e
     f0a:	01 97       	sbiw	r24, 0x01	; 1
     f0c:	f1 f7       	brne	.-4      	; 0xf0a <show_segments+0x3c4>
     f0e:	9e a7       	std	Y+46, r25	; 0x2e
     f10:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f12:	8f a5       	ldd	r24, Y+47	; 0x2f
     f14:	98 a9       	ldd	r25, Y+48	; 0x30
     f16:	01 97       	sbiw	r24, 0x01	; 1
     f18:	98 ab       	std	Y+48, r25	; 0x30
     f1a:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f1c:	8f a5       	ldd	r24, Y+47	; 0x2f
     f1e:	98 a9       	ldd	r25, Y+48	; 0x30
     f20:	00 97       	sbiw	r24, 0x00	; 0
     f22:	69 f7       	brne	.-38     	; 0xefe <show_segments+0x3b8>
     f24:	14 c0       	rjmp	.+40     	; 0xf4e <show_segments+0x408>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f26:	69 a9       	ldd	r22, Y+49	; 0x31
     f28:	7a a9       	ldd	r23, Y+50	; 0x32
     f2a:	8b a9       	ldd	r24, Y+51	; 0x33
     f2c:	9c a9       	ldd	r25, Y+52	; 0x34
     f2e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f32:	dc 01       	movw	r26, r24
     f34:	cb 01       	movw	r24, r22
     f36:	98 ab       	std	Y+48, r25	; 0x30
     f38:	8f a7       	std	Y+47, r24	; 0x2f
     f3a:	8f a5       	ldd	r24, Y+47	; 0x2f
     f3c:	98 a9       	ldd	r25, Y+48	; 0x30
     f3e:	9c a7       	std	Y+44, r25	; 0x2c
     f40:	8b a7       	std	Y+43, r24	; 0x2b
     f42:	8b a5       	ldd	r24, Y+43	; 0x2b
     f44:	9c a5       	ldd	r25, Y+44	; 0x2c
     f46:	01 97       	sbiw	r24, 0x01	; 1
     f48:	f1 f7       	brne	.-4      	; 0xf46 <show_segments+0x400>
     f4a:	9c a7       	std	Y+44, r25	; 0x2c
     f4c:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(5);
	PORTA&=~0x3F;
     f4e:	ab e3       	ldi	r26, 0x3B	; 59
     f50:	b0 e0       	ldi	r27, 0x00	; 0
     f52:	eb e3       	ldi	r30, 0x3B	; 59
     f54:	f0 e0       	ldi	r31, 0x00	; 0
     f56:	80 81       	ld	r24, Z
     f58:	80 7c       	andi	r24, 0xC0	; 192
     f5a:	8c 93       	st	X, r24

	//minutes tens
	PORTA|=(1<<3);
     f5c:	ab e3       	ldi	r26, 0x3B	; 59
     f5e:	b0 e0       	ldi	r27, 0x00	; 0
     f60:	eb e3       	ldi	r30, 0x3B	; 59
     f62:	f0 e0       	ldi	r31, 0x00	; 0
     f64:	80 81       	ld	r24, Z
     f66:	88 60       	ori	r24, 0x08	; 8
     f68:	8c 93       	st	X, r24
	PORTC=(PORTC&0xF0)|(min1&0x0F);
     f6a:	a5 e3       	ldi	r26, 0x35	; 53
     f6c:	b0 e0       	ldi	r27, 0x00	; 0
     f6e:	e5 e3       	ldi	r30, 0x35	; 53
     f70:	f0 e0       	ldi	r31, 0x00	; 0
     f72:	80 81       	ld	r24, Z
     f74:	28 2f       	mov	r18, r24
     f76:	20 7f       	andi	r18, 0xF0	; 240
     f78:	80 91 6e 00 	lds	r24, 0x006E
     f7c:	90 91 6f 00 	lds	r25, 0x006F
     f80:	8f 70       	andi	r24, 0x0F	; 15
     f82:	82 2b       	or	r24, r18
     f84:	8c 93       	st	X, r24
     f86:	80 e0       	ldi	r24, 0x00	; 0
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	a0 ea       	ldi	r26, 0xA0	; 160
     f8c:	b0 e4       	ldi	r27, 0x40	; 64
     f8e:	8f a3       	std	Y+39, r24	; 0x27
     f90:	98 a7       	std	Y+40, r25	; 0x28
     f92:	a9 a7       	std	Y+41, r26	; 0x29
     f94:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f96:	6f a1       	ldd	r22, Y+39	; 0x27
     f98:	78 a5       	ldd	r23, Y+40	; 0x28
     f9a:	89 a5       	ldd	r24, Y+41	; 0x29
     f9c:	9a a5       	ldd	r25, Y+42	; 0x2a
     f9e:	20 e0       	ldi	r18, 0x00	; 0
     fa0:	30 e0       	ldi	r19, 0x00	; 0
     fa2:	4a e7       	ldi	r20, 0x7A	; 122
     fa4:	55 e4       	ldi	r21, 0x45	; 69
     fa6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     faa:	dc 01       	movw	r26, r24
     fac:	cb 01       	movw	r24, r22
     fae:	8b a3       	std	Y+35, r24	; 0x23
     fb0:	9c a3       	std	Y+36, r25	; 0x24
     fb2:	ad a3       	std	Y+37, r26	; 0x25
     fb4:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     fb6:	6b a1       	ldd	r22, Y+35	; 0x23
     fb8:	7c a1       	ldd	r23, Y+36	; 0x24
     fba:	8d a1       	ldd	r24, Y+37	; 0x25
     fbc:	9e a1       	ldd	r25, Y+38	; 0x26
     fbe:	20 e0       	ldi	r18, 0x00	; 0
     fc0:	30 e0       	ldi	r19, 0x00	; 0
     fc2:	40 e8       	ldi	r20, 0x80	; 128
     fc4:	5f e3       	ldi	r21, 0x3F	; 63
     fc6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     fca:	88 23       	and	r24, r24
     fcc:	2c f4       	brge	.+10     	; 0xfd8 <show_segments+0x492>
		__ticks = 1;
     fce:	81 e0       	ldi	r24, 0x01	; 1
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	9a a3       	std	Y+34, r25	; 0x22
     fd4:	89 a3       	std	Y+33, r24	; 0x21
     fd6:	3f c0       	rjmp	.+126    	; 0x1056 <show_segments+0x510>
	else if (__tmp > 65535)
     fd8:	6b a1       	ldd	r22, Y+35	; 0x23
     fda:	7c a1       	ldd	r23, Y+36	; 0x24
     fdc:	8d a1       	ldd	r24, Y+37	; 0x25
     fde:	9e a1       	ldd	r25, Y+38	; 0x26
     fe0:	20 e0       	ldi	r18, 0x00	; 0
     fe2:	3f ef       	ldi	r19, 0xFF	; 255
     fe4:	4f e7       	ldi	r20, 0x7F	; 127
     fe6:	57 e4       	ldi	r21, 0x47	; 71
     fe8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     fec:	18 16       	cp	r1, r24
     fee:	4c f5       	brge	.+82     	; 0x1042 <show_segments+0x4fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ff0:	6f a1       	ldd	r22, Y+39	; 0x27
     ff2:	78 a5       	ldd	r23, Y+40	; 0x28
     ff4:	89 a5       	ldd	r24, Y+41	; 0x29
     ff6:	9a a5       	ldd	r25, Y+42	; 0x2a
     ff8:	20 e0       	ldi	r18, 0x00	; 0
     ffa:	30 e0       	ldi	r19, 0x00	; 0
     ffc:	40 e2       	ldi	r20, 0x20	; 32
     ffe:	51 e4       	ldi	r21, 0x41	; 65
    1000:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1004:	dc 01       	movw	r26, r24
    1006:	cb 01       	movw	r24, r22
    1008:	bc 01       	movw	r22, r24
    100a:	cd 01       	movw	r24, r26
    100c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1010:	dc 01       	movw	r26, r24
    1012:	cb 01       	movw	r24, r22
    1014:	9a a3       	std	Y+34, r25	; 0x22
    1016:	89 a3       	std	Y+33, r24	; 0x21
    1018:	0f c0       	rjmp	.+30     	; 0x1038 <show_segments+0x4f2>
    101a:	80 e9       	ldi	r24, 0x90	; 144
    101c:	91 e0       	ldi	r25, 0x01	; 1
    101e:	98 a3       	std	Y+32, r25	; 0x20
    1020:	8f 8f       	std	Y+31, r24	; 0x1f
    1022:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1024:	98 a1       	ldd	r25, Y+32	; 0x20
    1026:	01 97       	sbiw	r24, 0x01	; 1
    1028:	f1 f7       	brne	.-4      	; 0x1026 <show_segments+0x4e0>
    102a:	98 a3       	std	Y+32, r25	; 0x20
    102c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    102e:	89 a1       	ldd	r24, Y+33	; 0x21
    1030:	9a a1       	ldd	r25, Y+34	; 0x22
    1032:	01 97       	sbiw	r24, 0x01	; 1
    1034:	9a a3       	std	Y+34, r25	; 0x22
    1036:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1038:	89 a1       	ldd	r24, Y+33	; 0x21
    103a:	9a a1       	ldd	r25, Y+34	; 0x22
    103c:	00 97       	sbiw	r24, 0x00	; 0
    103e:	69 f7       	brne	.-38     	; 0x101a <show_segments+0x4d4>
    1040:	14 c0       	rjmp	.+40     	; 0x106a <show_segments+0x524>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1042:	6b a1       	ldd	r22, Y+35	; 0x23
    1044:	7c a1       	ldd	r23, Y+36	; 0x24
    1046:	8d a1       	ldd	r24, Y+37	; 0x25
    1048:	9e a1       	ldd	r25, Y+38	; 0x26
    104a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    104e:	dc 01       	movw	r26, r24
    1050:	cb 01       	movw	r24, r22
    1052:	9a a3       	std	Y+34, r25	; 0x22
    1054:	89 a3       	std	Y+33, r24	; 0x21
    1056:	89 a1       	ldd	r24, Y+33	; 0x21
    1058:	9a a1       	ldd	r25, Y+34	; 0x22
    105a:	9e 8f       	std	Y+30, r25	; 0x1e
    105c:	8d 8f       	std	Y+29, r24	; 0x1d
    105e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1060:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1062:	01 97       	sbiw	r24, 0x01	; 1
    1064:	f1 f7       	brne	.-4      	; 0x1062 <show_segments+0x51c>
    1066:	9e 8f       	std	Y+30, r25	; 0x1e
    1068:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(5);
	PORTA&=~0x3F;
    106a:	ab e3       	ldi	r26, 0x3B	; 59
    106c:	b0 e0       	ldi	r27, 0x00	; 0
    106e:	eb e3       	ldi	r30, 0x3B	; 59
    1070:	f0 e0       	ldi	r31, 0x00	; 0
    1072:	80 81       	ld	r24, Z
    1074:	80 7c       	andi	r24, 0xC0	; 192
    1076:	8c 93       	st	X, r24

	//hours units
	PORTA|=(1<<4);
    1078:	ab e3       	ldi	r26, 0x3B	; 59
    107a:	b0 e0       	ldi	r27, 0x00	; 0
    107c:	eb e3       	ldi	r30, 0x3B	; 59
    107e:	f0 e0       	ldi	r31, 0x00	; 0
    1080:	80 81       	ld	r24, Z
    1082:	80 61       	ori	r24, 0x10	; 16
    1084:	8c 93       	st	X, r24
	PORTC=(PORTC&0xF0)|(hour0&0x0F);
    1086:	a5 e3       	ldi	r26, 0x35	; 53
    1088:	b0 e0       	ldi	r27, 0x00	; 0
    108a:	e5 e3       	ldi	r30, 0x35	; 53
    108c:	f0 e0       	ldi	r31, 0x00	; 0
    108e:	80 81       	ld	r24, Z
    1090:	28 2f       	mov	r18, r24
    1092:	20 7f       	andi	r18, 0xF0	; 240
    1094:	80 91 74 00 	lds	r24, 0x0074
    1098:	90 91 75 00 	lds	r25, 0x0075
    109c:	8f 70       	andi	r24, 0x0F	; 15
    109e:	82 2b       	or	r24, r18
    10a0:	8c 93       	st	X, r24
    10a2:	80 e0       	ldi	r24, 0x00	; 0
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	a0 ea       	ldi	r26, 0xA0	; 160
    10a8:	b0 e4       	ldi	r27, 0x40	; 64
    10aa:	89 8f       	std	Y+25, r24	; 0x19
    10ac:	9a 8f       	std	Y+26, r25	; 0x1a
    10ae:	ab 8f       	std	Y+27, r26	; 0x1b
    10b0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10b2:	69 8d       	ldd	r22, Y+25	; 0x19
    10b4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    10b6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    10b8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    10ba:	20 e0       	ldi	r18, 0x00	; 0
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	4a e7       	ldi	r20, 0x7A	; 122
    10c0:	55 e4       	ldi	r21, 0x45	; 69
    10c2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    10c6:	dc 01       	movw	r26, r24
    10c8:	cb 01       	movw	r24, r22
    10ca:	8d 8b       	std	Y+21, r24	; 0x15
    10cc:	9e 8b       	std	Y+22, r25	; 0x16
    10ce:	af 8b       	std	Y+23, r26	; 0x17
    10d0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    10d2:	6d 89       	ldd	r22, Y+21	; 0x15
    10d4:	7e 89       	ldd	r23, Y+22	; 0x16
    10d6:	8f 89       	ldd	r24, Y+23	; 0x17
    10d8:	98 8d       	ldd	r25, Y+24	; 0x18
    10da:	20 e0       	ldi	r18, 0x00	; 0
    10dc:	30 e0       	ldi	r19, 0x00	; 0
    10de:	40 e8       	ldi	r20, 0x80	; 128
    10e0:	5f e3       	ldi	r21, 0x3F	; 63
    10e2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    10e6:	88 23       	and	r24, r24
    10e8:	2c f4       	brge	.+10     	; 0x10f4 <show_segments+0x5ae>
		__ticks = 1;
    10ea:	81 e0       	ldi	r24, 0x01	; 1
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	9c 8b       	std	Y+20, r25	; 0x14
    10f0:	8b 8b       	std	Y+19, r24	; 0x13
    10f2:	3f c0       	rjmp	.+126    	; 0x1172 <show_segments+0x62c>
	else if (__tmp > 65535)
    10f4:	6d 89       	ldd	r22, Y+21	; 0x15
    10f6:	7e 89       	ldd	r23, Y+22	; 0x16
    10f8:	8f 89       	ldd	r24, Y+23	; 0x17
    10fa:	98 8d       	ldd	r25, Y+24	; 0x18
    10fc:	20 e0       	ldi	r18, 0x00	; 0
    10fe:	3f ef       	ldi	r19, 0xFF	; 255
    1100:	4f e7       	ldi	r20, 0x7F	; 127
    1102:	57 e4       	ldi	r21, 0x47	; 71
    1104:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1108:	18 16       	cp	r1, r24
    110a:	4c f5       	brge	.+82     	; 0x115e <show_segments+0x618>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    110c:	69 8d       	ldd	r22, Y+25	; 0x19
    110e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1110:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1112:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1114:	20 e0       	ldi	r18, 0x00	; 0
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	40 e2       	ldi	r20, 0x20	; 32
    111a:	51 e4       	ldi	r21, 0x41	; 65
    111c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1120:	dc 01       	movw	r26, r24
    1122:	cb 01       	movw	r24, r22
    1124:	bc 01       	movw	r22, r24
    1126:	cd 01       	movw	r24, r26
    1128:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    112c:	dc 01       	movw	r26, r24
    112e:	cb 01       	movw	r24, r22
    1130:	9c 8b       	std	Y+20, r25	; 0x14
    1132:	8b 8b       	std	Y+19, r24	; 0x13
    1134:	0f c0       	rjmp	.+30     	; 0x1154 <show_segments+0x60e>
    1136:	80 e9       	ldi	r24, 0x90	; 144
    1138:	91 e0       	ldi	r25, 0x01	; 1
    113a:	9a 8b       	std	Y+18, r25	; 0x12
    113c:	89 8b       	std	Y+17, r24	; 0x11
    113e:	89 89       	ldd	r24, Y+17	; 0x11
    1140:	9a 89       	ldd	r25, Y+18	; 0x12
    1142:	01 97       	sbiw	r24, 0x01	; 1
    1144:	f1 f7       	brne	.-4      	; 0x1142 <show_segments+0x5fc>
    1146:	9a 8b       	std	Y+18, r25	; 0x12
    1148:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    114a:	8b 89       	ldd	r24, Y+19	; 0x13
    114c:	9c 89       	ldd	r25, Y+20	; 0x14
    114e:	01 97       	sbiw	r24, 0x01	; 1
    1150:	9c 8b       	std	Y+20, r25	; 0x14
    1152:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1154:	8b 89       	ldd	r24, Y+19	; 0x13
    1156:	9c 89       	ldd	r25, Y+20	; 0x14
    1158:	00 97       	sbiw	r24, 0x00	; 0
    115a:	69 f7       	brne	.-38     	; 0x1136 <show_segments+0x5f0>
    115c:	14 c0       	rjmp	.+40     	; 0x1186 <show_segments+0x640>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    115e:	6d 89       	ldd	r22, Y+21	; 0x15
    1160:	7e 89       	ldd	r23, Y+22	; 0x16
    1162:	8f 89       	ldd	r24, Y+23	; 0x17
    1164:	98 8d       	ldd	r25, Y+24	; 0x18
    1166:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    116a:	dc 01       	movw	r26, r24
    116c:	cb 01       	movw	r24, r22
    116e:	9c 8b       	std	Y+20, r25	; 0x14
    1170:	8b 8b       	std	Y+19, r24	; 0x13
    1172:	8b 89       	ldd	r24, Y+19	; 0x13
    1174:	9c 89       	ldd	r25, Y+20	; 0x14
    1176:	98 8b       	std	Y+16, r25	; 0x10
    1178:	8f 87       	std	Y+15, r24	; 0x0f
    117a:	8f 85       	ldd	r24, Y+15	; 0x0f
    117c:	98 89       	ldd	r25, Y+16	; 0x10
    117e:	01 97       	sbiw	r24, 0x01	; 1
    1180:	f1 f7       	brne	.-4      	; 0x117e <show_segments+0x638>
    1182:	98 8b       	std	Y+16, r25	; 0x10
    1184:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(5);
	PORTA&=~0x3F;
    1186:	ab e3       	ldi	r26, 0x3B	; 59
    1188:	b0 e0       	ldi	r27, 0x00	; 0
    118a:	eb e3       	ldi	r30, 0x3B	; 59
    118c:	f0 e0       	ldi	r31, 0x00	; 0
    118e:	80 81       	ld	r24, Z
    1190:	80 7c       	andi	r24, 0xC0	; 192
    1192:	8c 93       	st	X, r24

	//hours tens
	PORTA|=(1<<5);
    1194:	ab e3       	ldi	r26, 0x3B	; 59
    1196:	b0 e0       	ldi	r27, 0x00	; 0
    1198:	eb e3       	ldi	r30, 0x3B	; 59
    119a:	f0 e0       	ldi	r31, 0x00	; 0
    119c:	80 81       	ld	r24, Z
    119e:	80 62       	ori	r24, 0x20	; 32
    11a0:	8c 93       	st	X, r24
	PORTC=(PORTC&0xF0)|(hour1&0x0F);
    11a2:	a5 e3       	ldi	r26, 0x35	; 53
    11a4:	b0 e0       	ldi	r27, 0x00	; 0
    11a6:	e5 e3       	ldi	r30, 0x35	; 53
    11a8:	f0 e0       	ldi	r31, 0x00	; 0
    11aa:	80 81       	ld	r24, Z
    11ac:	28 2f       	mov	r18, r24
    11ae:	20 7f       	andi	r18, 0xF0	; 240
    11b0:	80 91 72 00 	lds	r24, 0x0072
    11b4:	90 91 73 00 	lds	r25, 0x0073
    11b8:	8f 70       	andi	r24, 0x0F	; 15
    11ba:	82 2b       	or	r24, r18
    11bc:	8c 93       	st	X, r24
    11be:	80 e0       	ldi	r24, 0x00	; 0
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	a0 ea       	ldi	r26, 0xA0	; 160
    11c4:	b0 e4       	ldi	r27, 0x40	; 64
    11c6:	8b 87       	std	Y+11, r24	; 0x0b
    11c8:	9c 87       	std	Y+12, r25	; 0x0c
    11ca:	ad 87       	std	Y+13, r26	; 0x0d
    11cc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11ce:	6b 85       	ldd	r22, Y+11	; 0x0b
    11d0:	7c 85       	ldd	r23, Y+12	; 0x0c
    11d2:	8d 85       	ldd	r24, Y+13	; 0x0d
    11d4:	9e 85       	ldd	r25, Y+14	; 0x0e
    11d6:	20 e0       	ldi	r18, 0x00	; 0
    11d8:	30 e0       	ldi	r19, 0x00	; 0
    11da:	4a e7       	ldi	r20, 0x7A	; 122
    11dc:	55 e4       	ldi	r21, 0x45	; 69
    11de:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    11e2:	dc 01       	movw	r26, r24
    11e4:	cb 01       	movw	r24, r22
    11e6:	8f 83       	std	Y+7, r24	; 0x07
    11e8:	98 87       	std	Y+8, r25	; 0x08
    11ea:	a9 87       	std	Y+9, r26	; 0x09
    11ec:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    11ee:	6f 81       	ldd	r22, Y+7	; 0x07
    11f0:	78 85       	ldd	r23, Y+8	; 0x08
    11f2:	89 85       	ldd	r24, Y+9	; 0x09
    11f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    11f6:	20 e0       	ldi	r18, 0x00	; 0
    11f8:	30 e0       	ldi	r19, 0x00	; 0
    11fa:	40 e8       	ldi	r20, 0x80	; 128
    11fc:	5f e3       	ldi	r21, 0x3F	; 63
    11fe:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1202:	88 23       	and	r24, r24
    1204:	2c f4       	brge	.+10     	; 0x1210 <show_segments+0x6ca>
		__ticks = 1;
    1206:	81 e0       	ldi	r24, 0x01	; 1
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	9e 83       	std	Y+6, r25	; 0x06
    120c:	8d 83       	std	Y+5, r24	; 0x05
    120e:	3f c0       	rjmp	.+126    	; 0x128e <show_segments+0x748>
	else if (__tmp > 65535)
    1210:	6f 81       	ldd	r22, Y+7	; 0x07
    1212:	78 85       	ldd	r23, Y+8	; 0x08
    1214:	89 85       	ldd	r24, Y+9	; 0x09
    1216:	9a 85       	ldd	r25, Y+10	; 0x0a
    1218:	20 e0       	ldi	r18, 0x00	; 0
    121a:	3f ef       	ldi	r19, 0xFF	; 255
    121c:	4f e7       	ldi	r20, 0x7F	; 127
    121e:	57 e4       	ldi	r21, 0x47	; 71
    1220:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1224:	18 16       	cp	r1, r24
    1226:	4c f5       	brge	.+82     	; 0x127a <show_segments+0x734>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1228:	6b 85       	ldd	r22, Y+11	; 0x0b
    122a:	7c 85       	ldd	r23, Y+12	; 0x0c
    122c:	8d 85       	ldd	r24, Y+13	; 0x0d
    122e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1230:	20 e0       	ldi	r18, 0x00	; 0
    1232:	30 e0       	ldi	r19, 0x00	; 0
    1234:	40 e2       	ldi	r20, 0x20	; 32
    1236:	51 e4       	ldi	r21, 0x41	; 65
    1238:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    123c:	dc 01       	movw	r26, r24
    123e:	cb 01       	movw	r24, r22
    1240:	bc 01       	movw	r22, r24
    1242:	cd 01       	movw	r24, r26
    1244:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1248:	dc 01       	movw	r26, r24
    124a:	cb 01       	movw	r24, r22
    124c:	9e 83       	std	Y+6, r25	; 0x06
    124e:	8d 83       	std	Y+5, r24	; 0x05
    1250:	0f c0       	rjmp	.+30     	; 0x1270 <show_segments+0x72a>
    1252:	80 e9       	ldi	r24, 0x90	; 144
    1254:	91 e0       	ldi	r25, 0x01	; 1
    1256:	9c 83       	std	Y+4, r25	; 0x04
    1258:	8b 83       	std	Y+3, r24	; 0x03
    125a:	8b 81       	ldd	r24, Y+3	; 0x03
    125c:	9c 81       	ldd	r25, Y+4	; 0x04
    125e:	01 97       	sbiw	r24, 0x01	; 1
    1260:	f1 f7       	brne	.-4      	; 0x125e <show_segments+0x718>
    1262:	9c 83       	std	Y+4, r25	; 0x04
    1264:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1266:	8d 81       	ldd	r24, Y+5	; 0x05
    1268:	9e 81       	ldd	r25, Y+6	; 0x06
    126a:	01 97       	sbiw	r24, 0x01	; 1
    126c:	9e 83       	std	Y+6, r25	; 0x06
    126e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1270:	8d 81       	ldd	r24, Y+5	; 0x05
    1272:	9e 81       	ldd	r25, Y+6	; 0x06
    1274:	00 97       	sbiw	r24, 0x00	; 0
    1276:	69 f7       	brne	.-38     	; 0x1252 <show_segments+0x70c>
    1278:	14 c0       	rjmp	.+40     	; 0x12a2 <show_segments+0x75c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    127a:	6f 81       	ldd	r22, Y+7	; 0x07
    127c:	78 85       	ldd	r23, Y+8	; 0x08
    127e:	89 85       	ldd	r24, Y+9	; 0x09
    1280:	9a 85       	ldd	r25, Y+10	; 0x0a
    1282:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1286:	dc 01       	movw	r26, r24
    1288:	cb 01       	movw	r24, r22
    128a:	9e 83       	std	Y+6, r25	; 0x06
    128c:	8d 83       	std	Y+5, r24	; 0x05
    128e:	8d 81       	ldd	r24, Y+5	; 0x05
    1290:	9e 81       	ldd	r25, Y+6	; 0x06
    1292:	9a 83       	std	Y+2, r25	; 0x02
    1294:	89 83       	std	Y+1, r24	; 0x01
    1296:	89 81       	ldd	r24, Y+1	; 0x01
    1298:	9a 81       	ldd	r25, Y+2	; 0x02
    129a:	01 97       	sbiw	r24, 0x01	; 1
    129c:	f1 f7       	brne	.-4      	; 0x129a <show_segments+0x754>
    129e:	9a 83       	std	Y+2, r25	; 0x02
    12a0:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(5);
	PORTA&=~0x3F;
    12a2:	ab e3       	ldi	r26, 0x3B	; 59
    12a4:	b0 e0       	ldi	r27, 0x00	; 0
    12a6:	eb e3       	ldi	r30, 0x3B	; 59
    12a8:	f0 e0       	ldi	r31, 0x00	; 0
    12aa:	80 81       	ld	r24, Z
    12ac:	80 7c       	andi	r24, 0xC0	; 192
    12ae:	8c 93       	st	X, r24

}
    12b0:	cc 5a       	subi	r28, 0xAC	; 172
    12b2:	df 4f       	sbci	r29, 0xFF	; 255
    12b4:	0f b6       	in	r0, 0x3f	; 63
    12b6:	f8 94       	cli
    12b8:	de bf       	out	0x3e, r29	; 62
    12ba:	0f be       	out	0x3f, r0	; 63
    12bc:	cd bf       	out	0x3d, r28	; 61
    12be:	cf 91       	pop	r28
    12c0:	df 91       	pop	r29
    12c2:	1f 91       	pop	r17
    12c4:	0f 91       	pop	r16
    12c6:	08 95       	ret

000012c8 <Timer_countUp>:

void Timer_countUp(void){
    12c8:	df 93       	push	r29
    12ca:	cf 93       	push	r28
    12cc:	cd b7       	in	r28, 0x3d	; 61
    12ce:	de b7       	in	r29, 0x3e	; 62
	//mode 1: timer/counting up
	if(sec0!=9)
    12d0:	80 91 6c 00 	lds	r24, 0x006C
    12d4:	90 91 6d 00 	lds	r25, 0x006D
    12d8:	89 30       	cpi	r24, 0x09	; 9
    12da:	91 05       	cpc	r25, r1
    12dc:	51 f0       	breq	.+20     	; 0x12f2 <Timer_countUp+0x2a>
	{
		sec0++;
    12de:	80 91 6c 00 	lds	r24, 0x006C
    12e2:	90 91 6d 00 	lds	r25, 0x006D
    12e6:	01 96       	adiw	r24, 0x01	; 1
    12e8:	90 93 6d 00 	sts	0x006D, r25
    12ec:	80 93 6c 00 	sts	0x006C, r24
    12f0:	bc c0       	rjmp	.+376    	; 0x146a <Timer_countUp+0x1a2>
	}
	else if(sec0==9 && sec1!=5)
    12f2:	80 91 6c 00 	lds	r24, 0x006C
    12f6:	90 91 6d 00 	lds	r25, 0x006D
    12fa:	89 30       	cpi	r24, 0x09	; 9
    12fc:	91 05       	cpc	r25, r1
    12fe:	a9 f4       	brne	.+42     	; 0x132a <Timer_countUp+0x62>
    1300:	80 91 6a 00 	lds	r24, 0x006A
    1304:	90 91 6b 00 	lds	r25, 0x006B
    1308:	85 30       	cpi	r24, 0x05	; 5
    130a:	91 05       	cpc	r25, r1
    130c:	71 f0       	breq	.+28     	; 0x132a <Timer_countUp+0x62>
	{
		sec1++;
    130e:	80 91 6a 00 	lds	r24, 0x006A
    1312:	90 91 6b 00 	lds	r25, 0x006B
    1316:	01 96       	adiw	r24, 0x01	; 1
    1318:	90 93 6b 00 	sts	0x006B, r25
    131c:	80 93 6a 00 	sts	0x006A, r24
		sec0=0;
    1320:	10 92 6d 00 	sts	0x006D, r1
    1324:	10 92 6c 00 	sts	0x006C, r1
    1328:	a0 c0       	rjmp	.+320    	; 0x146a <Timer_countUp+0x1a2>
	}
	else if(sec0==9 && sec1==5)
    132a:	80 91 6c 00 	lds	r24, 0x006C
    132e:	90 91 6d 00 	lds	r25, 0x006D
    1332:	89 30       	cpi	r24, 0x09	; 9
    1334:	91 05       	cpc	r25, r1
    1336:	09 f0       	breq	.+2      	; 0x133a <Timer_countUp+0x72>
    1338:	98 c0       	rjmp	.+304    	; 0x146a <Timer_countUp+0x1a2>
    133a:	80 91 6a 00 	lds	r24, 0x006A
    133e:	90 91 6b 00 	lds	r25, 0x006B
    1342:	85 30       	cpi	r24, 0x05	; 5
    1344:	91 05       	cpc	r25, r1
    1346:	09 f0       	breq	.+2      	; 0x134a <Timer_countUp+0x82>
    1348:	90 c0       	rjmp	.+288    	; 0x146a <Timer_countUp+0x1a2>
	{
		sec0=0;
    134a:	10 92 6d 00 	sts	0x006D, r1
    134e:	10 92 6c 00 	sts	0x006C, r1
		sec1=0;
    1352:	10 92 6b 00 	sts	0x006B, r1
    1356:	10 92 6a 00 	sts	0x006A, r1

		//full second passed, check mins
		if(min0!=9)
    135a:	80 91 70 00 	lds	r24, 0x0070
    135e:	90 91 71 00 	lds	r25, 0x0071
    1362:	89 30       	cpi	r24, 0x09	; 9
    1364:	91 05       	cpc	r25, r1
    1366:	51 f0       	breq	.+20     	; 0x137c <Timer_countUp+0xb4>
		{
			min0++;
    1368:	80 91 70 00 	lds	r24, 0x0070
    136c:	90 91 71 00 	lds	r25, 0x0071
    1370:	01 96       	adiw	r24, 0x01	; 1
    1372:	90 93 71 00 	sts	0x0071, r25
    1376:	80 93 70 00 	sts	0x0070, r24
    137a:	77 c0       	rjmp	.+238    	; 0x146a <Timer_countUp+0x1a2>
		}
		else if(min0==9 &&min1!=5)
    137c:	80 91 70 00 	lds	r24, 0x0070
    1380:	90 91 71 00 	lds	r25, 0x0071
    1384:	89 30       	cpi	r24, 0x09	; 9
    1386:	91 05       	cpc	r25, r1
    1388:	a9 f4       	brne	.+42     	; 0x13b4 <Timer_countUp+0xec>
    138a:	80 91 6e 00 	lds	r24, 0x006E
    138e:	90 91 6f 00 	lds	r25, 0x006F
    1392:	85 30       	cpi	r24, 0x05	; 5
    1394:	91 05       	cpc	r25, r1
    1396:	71 f0       	breq	.+28     	; 0x13b4 <Timer_countUp+0xec>
		{
			min0=0;
    1398:	10 92 71 00 	sts	0x0071, r1
    139c:	10 92 70 00 	sts	0x0070, r1
			min1++;
    13a0:	80 91 6e 00 	lds	r24, 0x006E
    13a4:	90 91 6f 00 	lds	r25, 0x006F
    13a8:	01 96       	adiw	r24, 0x01	; 1
    13aa:	90 93 6f 00 	sts	0x006F, r25
    13ae:	80 93 6e 00 	sts	0x006E, r24
    13b2:	5b c0       	rjmp	.+182    	; 0x146a <Timer_countUp+0x1a2>
		}
		else if(min0==9 && min1==5)
    13b4:	80 91 70 00 	lds	r24, 0x0070
    13b8:	90 91 71 00 	lds	r25, 0x0071
    13bc:	89 30       	cpi	r24, 0x09	; 9
    13be:	91 05       	cpc	r25, r1
    13c0:	09 f0       	breq	.+2      	; 0x13c4 <Timer_countUp+0xfc>
    13c2:	53 c0       	rjmp	.+166    	; 0x146a <Timer_countUp+0x1a2>
    13c4:	80 91 6e 00 	lds	r24, 0x006E
    13c8:	90 91 6f 00 	lds	r25, 0x006F
    13cc:	85 30       	cpi	r24, 0x05	; 5
    13ce:	91 05       	cpc	r25, r1
    13d0:	09 f0       	breq	.+2      	; 0x13d4 <Timer_countUp+0x10c>
    13d2:	4b c0       	rjmp	.+150    	; 0x146a <Timer_countUp+0x1a2>
		{
			min0=0;
    13d4:	10 92 71 00 	sts	0x0071, r1
    13d8:	10 92 70 00 	sts	0x0070, r1
			min1=0;
    13dc:	10 92 6f 00 	sts	0x006F, r1
    13e0:	10 92 6e 00 	sts	0x006E, r1

			//full min (and second) passed, check hours
			if(hour0!=9)
    13e4:	80 91 74 00 	lds	r24, 0x0074
    13e8:	90 91 75 00 	lds	r25, 0x0075
    13ec:	89 30       	cpi	r24, 0x09	; 9
    13ee:	91 05       	cpc	r25, r1
    13f0:	51 f0       	breq	.+20     	; 0x1406 <Timer_countUp+0x13e>
			{
				hour0++;
    13f2:	80 91 74 00 	lds	r24, 0x0074
    13f6:	90 91 75 00 	lds	r25, 0x0075
    13fa:	01 96       	adiw	r24, 0x01	; 1
    13fc:	90 93 75 00 	sts	0x0075, r25
    1400:	80 93 74 00 	sts	0x0074, r24
    1404:	32 c0       	rjmp	.+100    	; 0x146a <Timer_countUp+0x1a2>
			}
			else if(hour0==9 && hour1!=5)
    1406:	80 91 74 00 	lds	r24, 0x0074
    140a:	90 91 75 00 	lds	r25, 0x0075
    140e:	89 30       	cpi	r24, 0x09	; 9
    1410:	91 05       	cpc	r25, r1
    1412:	a9 f4       	brne	.+42     	; 0x143e <Timer_countUp+0x176>
    1414:	80 91 72 00 	lds	r24, 0x0072
    1418:	90 91 73 00 	lds	r25, 0x0073
    141c:	85 30       	cpi	r24, 0x05	; 5
    141e:	91 05       	cpc	r25, r1
    1420:	71 f0       	breq	.+28     	; 0x143e <Timer_countUp+0x176>
			{
				hour0=0;
    1422:	10 92 75 00 	sts	0x0075, r1
    1426:	10 92 74 00 	sts	0x0074, r1
				hour1++;
    142a:	80 91 72 00 	lds	r24, 0x0072
    142e:	90 91 73 00 	lds	r25, 0x0073
    1432:	01 96       	adiw	r24, 0x01	; 1
    1434:	90 93 73 00 	sts	0x0073, r25
    1438:	80 93 72 00 	sts	0x0072, r24
    143c:	16 c0       	rjmp	.+44     	; 0x146a <Timer_countUp+0x1a2>
			}
			else if(hour0==9 &&hour1==5)
    143e:	80 91 74 00 	lds	r24, 0x0074
    1442:	90 91 75 00 	lds	r25, 0x0075
    1446:	89 30       	cpi	r24, 0x09	; 9
    1448:	91 05       	cpc	r25, r1
    144a:	79 f4       	brne	.+30     	; 0x146a <Timer_countUp+0x1a2>
    144c:	80 91 72 00 	lds	r24, 0x0072
    1450:	90 91 73 00 	lds	r25, 0x0073
    1454:	85 30       	cpi	r24, 0x05	; 5
    1456:	91 05       	cpc	r25, r1
    1458:	41 f4       	brne	.+16     	; 0x146a <Timer_countUp+0x1a2>
			{
				hour0=0;
    145a:	10 92 75 00 	sts	0x0075, r1
    145e:	10 92 74 00 	sts	0x0074, r1
				hour1=0;
    1462:	10 92 73 00 	sts	0x0073, r1
    1466:	10 92 72 00 	sts	0x0072, r1
				//keda segment all values equal 0, timer will count from the start.
			}
		}
	}
}
    146a:	cf 91       	pop	r28
    146c:	df 91       	pop	r29
    146e:	08 95       	ret

00001470 <Timer_countDown>:

void Timer_countDown(void){
    1470:	df 93       	push	r29
    1472:	cf 93       	push	r28
    1474:	cd b7       	in	r28, 0x3d	; 61
    1476:	de b7       	in	r29, 0x3e	; 62
	//mode 2: counting down
	if(sec0!=0)
    1478:	80 91 6c 00 	lds	r24, 0x006C
    147c:	90 91 6d 00 	lds	r25, 0x006D
    1480:	00 97       	sbiw	r24, 0x00	; 0
    1482:	51 f0       	breq	.+20     	; 0x1498 <Timer_countDown+0x28>
	{
		sec0--;
    1484:	80 91 6c 00 	lds	r24, 0x006C
    1488:	90 91 6d 00 	lds	r25, 0x006D
    148c:	01 97       	sbiw	r24, 0x01	; 1
    148e:	90 93 6d 00 	sts	0x006D, r25
    1492:	80 93 6c 00 	sts	0x006C, r24
    1496:	cb c0       	rjmp	.+406    	; 0x162e <Timer_countDown+0x1be>
	}
	else if(sec0==0 && sec1!=0)
    1498:	80 91 6c 00 	lds	r24, 0x006C
    149c:	90 91 6d 00 	lds	r25, 0x006D
    14a0:	00 97       	sbiw	r24, 0x00	; 0
    14a2:	b1 f4       	brne	.+44     	; 0x14d0 <Timer_countDown+0x60>
    14a4:	80 91 6a 00 	lds	r24, 0x006A
    14a8:	90 91 6b 00 	lds	r25, 0x006B
    14ac:	00 97       	sbiw	r24, 0x00	; 0
    14ae:	81 f0       	breq	.+32     	; 0x14d0 <Timer_countDown+0x60>
	{
		sec0=9;
    14b0:	89 e0       	ldi	r24, 0x09	; 9
    14b2:	90 e0       	ldi	r25, 0x00	; 0
    14b4:	90 93 6d 00 	sts	0x006D, r25
    14b8:	80 93 6c 00 	sts	0x006C, r24
		sec1--;
    14bc:	80 91 6a 00 	lds	r24, 0x006A
    14c0:	90 91 6b 00 	lds	r25, 0x006B
    14c4:	01 97       	sbiw	r24, 0x01	; 1
    14c6:	90 93 6b 00 	sts	0x006B, r25
    14ca:	80 93 6a 00 	sts	0x006A, r24
    14ce:	af c0       	rjmp	.+350    	; 0x162e <Timer_countDown+0x1be>
	}
	else if(sec0==0 && sec1==0)  //check if mins exist, if not check hours
    14d0:	80 91 6c 00 	lds	r24, 0x006C
    14d4:	90 91 6d 00 	lds	r25, 0x006D
    14d8:	00 97       	sbiw	r24, 0x00	; 0
    14da:	09 f0       	breq	.+2      	; 0x14de <Timer_countDown+0x6e>
    14dc:	a8 c0       	rjmp	.+336    	; 0x162e <Timer_countDown+0x1be>
    14de:	80 91 6a 00 	lds	r24, 0x006A
    14e2:	90 91 6b 00 	lds	r25, 0x006B
    14e6:	00 97       	sbiw	r24, 0x00	; 0
    14e8:	09 f0       	breq	.+2      	; 0x14ec <Timer_countDown+0x7c>
    14ea:	a1 c0       	rjmp	.+322    	; 0x162e <Timer_countDown+0x1be>
	{
		sec0=9;
    14ec:	89 e0       	ldi	r24, 0x09	; 9
    14ee:	90 e0       	ldi	r25, 0x00	; 0
    14f0:	90 93 6d 00 	sts	0x006D, r25
    14f4:	80 93 6c 00 	sts	0x006C, r24
		sec1=5;
    14f8:	85 e0       	ldi	r24, 0x05	; 5
    14fa:	90 e0       	ldi	r25, 0x00	; 0
    14fc:	90 93 6b 00 	sts	0x006B, r25
    1500:	80 93 6a 00 	sts	0x006A, r24

		//check minutes
		if(min0!=0)
    1504:	80 91 70 00 	lds	r24, 0x0070
    1508:	90 91 71 00 	lds	r25, 0x0071
    150c:	00 97       	sbiw	r24, 0x00	; 0
    150e:	51 f0       	breq	.+20     	; 0x1524 <Timer_countDown+0xb4>
		{
			min0--;
    1510:	80 91 70 00 	lds	r24, 0x0070
    1514:	90 91 71 00 	lds	r25, 0x0071
    1518:	01 97       	sbiw	r24, 0x01	; 1
    151a:	90 93 71 00 	sts	0x0071, r25
    151e:	80 93 70 00 	sts	0x0070, r24
    1522:	85 c0       	rjmp	.+266    	; 0x162e <Timer_countDown+0x1be>
		}
		else if(min0==0 && min1!=0)
    1524:	80 91 70 00 	lds	r24, 0x0070
    1528:	90 91 71 00 	lds	r25, 0x0071
    152c:	00 97       	sbiw	r24, 0x00	; 0
    152e:	b1 f4       	brne	.+44     	; 0x155c <Timer_countDown+0xec>
    1530:	80 91 6e 00 	lds	r24, 0x006E
    1534:	90 91 6f 00 	lds	r25, 0x006F
    1538:	00 97       	sbiw	r24, 0x00	; 0
    153a:	81 f0       	breq	.+32     	; 0x155c <Timer_countDown+0xec>
		{
			min0=9;
    153c:	89 e0       	ldi	r24, 0x09	; 9
    153e:	90 e0       	ldi	r25, 0x00	; 0
    1540:	90 93 71 00 	sts	0x0071, r25
    1544:	80 93 70 00 	sts	0x0070, r24
			min1--;
    1548:	80 91 6e 00 	lds	r24, 0x006E
    154c:	90 91 6f 00 	lds	r25, 0x006F
    1550:	01 97       	sbiw	r24, 0x01	; 1
    1552:	90 93 6f 00 	sts	0x006F, r25
    1556:	80 93 6e 00 	sts	0x006E, r24
    155a:	69 c0       	rjmp	.+210    	; 0x162e <Timer_countDown+0x1be>
		}
		else if(min0==0 && min1==0)   //keda both seconds and mins are zeroed
    155c:	80 91 70 00 	lds	r24, 0x0070
    1560:	90 91 71 00 	lds	r25, 0x0071
    1564:	00 97       	sbiw	r24, 0x00	; 0
    1566:	09 f0       	breq	.+2      	; 0x156a <Timer_countDown+0xfa>
    1568:	62 c0       	rjmp	.+196    	; 0x162e <Timer_countDown+0x1be>
    156a:	80 91 6e 00 	lds	r24, 0x006E
    156e:	90 91 6f 00 	lds	r25, 0x006F
    1572:	00 97       	sbiw	r24, 0x00	; 0
    1574:	09 f0       	breq	.+2      	; 0x1578 <Timer_countDown+0x108>
    1576:	5b c0       	rjmp	.+182    	; 0x162e <Timer_countDown+0x1be>
		{
			min0=9;
    1578:	89 e0       	ldi	r24, 0x09	; 9
    157a:	90 e0       	ldi	r25, 0x00	; 0
    157c:	90 93 71 00 	sts	0x0071, r25
    1580:	80 93 70 00 	sts	0x0070, r24
			min1=5;
    1584:	85 e0       	ldi	r24, 0x05	; 5
    1586:	90 e0       	ldi	r25, 0x00	; 0
    1588:	90 93 6f 00 	sts	0x006F, r25
    158c:	80 93 6e 00 	sts	0x006E, r24

			if(hour0!=0)
    1590:	80 91 74 00 	lds	r24, 0x0074
    1594:	90 91 75 00 	lds	r25, 0x0075
    1598:	00 97       	sbiw	r24, 0x00	; 0
    159a:	51 f0       	breq	.+20     	; 0x15b0 <Timer_countDown+0x140>
			{
				hour0--;
    159c:	80 91 74 00 	lds	r24, 0x0074
    15a0:	90 91 75 00 	lds	r25, 0x0075
    15a4:	01 97       	sbiw	r24, 0x01	; 1
    15a6:	90 93 75 00 	sts	0x0075, r25
    15aa:	80 93 74 00 	sts	0x0074, r24
    15ae:	3f c0       	rjmp	.+126    	; 0x162e <Timer_countDown+0x1be>
			}
			else if(hour0==0 && hour1!=0)
    15b0:	80 91 74 00 	lds	r24, 0x0074
    15b4:	90 91 75 00 	lds	r25, 0x0075
    15b8:	00 97       	sbiw	r24, 0x00	; 0
    15ba:	b1 f4       	brne	.+44     	; 0x15e8 <Timer_countDown+0x178>
    15bc:	80 91 72 00 	lds	r24, 0x0072
    15c0:	90 91 73 00 	lds	r25, 0x0073
    15c4:	00 97       	sbiw	r24, 0x00	; 0
    15c6:	81 f0       	breq	.+32     	; 0x15e8 <Timer_countDown+0x178>
			{
				hour0=9;
    15c8:	89 e0       	ldi	r24, 0x09	; 9
    15ca:	90 e0       	ldi	r25, 0x00	; 0
    15cc:	90 93 75 00 	sts	0x0075, r25
    15d0:	80 93 74 00 	sts	0x0074, r24
				hour1--;
    15d4:	80 91 72 00 	lds	r24, 0x0072
    15d8:	90 91 73 00 	lds	r25, 0x0073
    15dc:	01 97       	sbiw	r24, 0x01	; 1
    15de:	90 93 73 00 	sts	0x0073, r25
    15e2:	80 93 72 00 	sts	0x0072, r24
    15e6:	23 c0       	rjmp	.+70     	; 0x162e <Timer_countDown+0x1be>
			}
			else if(hour0==0 && hour1==0)
    15e8:	80 91 74 00 	lds	r24, 0x0074
    15ec:	90 91 75 00 	lds	r25, 0x0075
    15f0:	00 97       	sbiw	r24, 0x00	; 0
    15f2:	e9 f4       	brne	.+58     	; 0x162e <Timer_countDown+0x1be>
    15f4:	80 91 72 00 	lds	r24, 0x0072
    15f8:	90 91 73 00 	lds	r25, 0x0073
    15fc:	00 97       	sbiw	r24, 0x00	; 0
    15fe:	b9 f4       	brne	.+46     	; 0x162e <Timer_countDown+0x1be>
			{
				//no more minutes and hours to deduct, so stop seconds and minutes at 00
				sec0=0;
    1600:	10 92 6d 00 	sts	0x006D, r1
    1604:	10 92 6c 00 	sts	0x006C, r1
				sec1=0;
    1608:	10 92 6b 00 	sts	0x006B, r1
    160c:	10 92 6a 00 	sts	0x006A, r1
				min0=0;
    1610:	10 92 71 00 	sts	0x0071, r1
    1614:	10 92 70 00 	sts	0x0070, r1
				min1=0;
    1618:	10 92 6f 00 	sts	0x006F, r1
    161c:	10 92 6e 00 	sts	0x006E, r1

				//trigger the buzzer
				PORTD|=(1<<0);
    1620:	a2 e3       	ldi	r26, 0x32	; 50
    1622:	b0 e0       	ldi	r27, 0x00	; 0
    1624:	e2 e3       	ldi	r30, 0x32	; 50
    1626:	f0 e0       	ldi	r31, 0x00	; 0
    1628:	80 81       	ld	r24, Z
    162a:	81 60       	ori	r24, 0x01	; 1
    162c:	8c 93       	st	X, r24
			}
		}

	}

}
    162e:	cf 91       	pop	r28
    1630:	df 91       	pop	r29
    1632:	08 95       	ret

00001634 <Timer1_init>:

//setting up Timer1, Fcpu=16Mhz, prescaler=1024
void Timer1_init(void){
    1634:	df 93       	push	r29
    1636:	cf 93       	push	r28
    1638:	cd b7       	in	r28, 0x3d	; 61
    163a:	de b7       	in	r29, 0x3e	; 62
	TCCR1A=(1<<FOC1A);
    163c:	ef e4       	ldi	r30, 0x4F	; 79
    163e:	f0 e0       	ldi	r31, 0x00	; 0
    1640:	88 e0       	ldi	r24, 0x08	; 8
    1642:	80 83       	st	Z, r24
	TCCR1B=(1<<CS10)|(1<<CS12)|(1<<WGM12)|(1<<WGM13);
    1644:	ee e4       	ldi	r30, 0x4E	; 78
    1646:	f0 e0       	ldi	r31, 0x00	; 0
    1648:	8d e1       	ldi	r24, 0x1D	; 29
    164a:	80 83       	st	Z, r24
	TCNT1=0;
    164c:	ec e4       	ldi	r30, 0x4C	; 76
    164e:	f0 e0       	ldi	r31, 0x00	; 0
    1650:	11 82       	std	Z+1, r1	; 0x01
    1652:	10 82       	st	Z, r1
	ICR1=15625;
    1654:	e6 e4       	ldi	r30, 0x46	; 70
    1656:	f0 e0       	ldi	r31, 0x00	; 0
    1658:	89 e0       	ldi	r24, 0x09	; 9
    165a:	9d e3       	ldi	r25, 0x3D	; 61
    165c:	91 83       	std	Z+1, r25	; 0x01
    165e:	80 83       	st	Z, r24
	TIMSK|=(1<<OCIE1A);
    1660:	a9 e5       	ldi	r26, 0x59	; 89
    1662:	b0 e0       	ldi	r27, 0x00	; 0
    1664:	e9 e5       	ldi	r30, 0x59	; 89
    1666:	f0 e0       	ldi	r31, 0x00	; 0
    1668:	80 81       	ld	r24, Z
    166a:	80 61       	ori	r24, 0x10	; 16
    166c:	8c 93       	st	X, r24
}
    166e:	cf 91       	pop	r28
    1670:	df 91       	pop	r29
    1672:	08 95       	ret

00001674 <__vector_7>:

//An interrupt is generated each second.
ISR(TIMER1_COMPA_vect){
    1674:	1f 92       	push	r1
    1676:	0f 92       	push	r0
    1678:	0f b6       	in	r0, 0x3f	; 63
    167a:	0f 92       	push	r0
    167c:	11 24       	eor	r1, r1
    167e:	8f 93       	push	r24
    1680:	df 93       	push	r29
    1682:	cf 93       	push	r28
    1684:	cd b7       	in	r28, 0x3d	; 61
    1686:	de b7       	in	r29, 0x3e	; 62

	if(timer_mode_flag)
    1688:	80 91 68 00 	lds	r24, 0x0068
    168c:	88 23       	and	r24, r24
    168e:	21 f0       	breq	.+8      	; 0x1698 <__vector_7+0x24>
	{
		ISR_countUp_flag=1;
    1690:	81 e0       	ldi	r24, 0x01	; 1
    1692:	80 93 77 00 	sts	0x0077, r24
    1696:	07 c0       	rjmp	.+14     	; 0x16a6 <__vector_7+0x32>
	}
	else if(!timer_mode_flag)
    1698:	80 91 68 00 	lds	r24, 0x0068
    169c:	88 23       	and	r24, r24
    169e:	19 f4       	brne	.+6      	; 0x16a6 <__vector_7+0x32>
	{
		ISR_countDown_flag=1;
    16a0:	81 e0       	ldi	r24, 0x01	; 1
    16a2:	80 93 78 00 	sts	0x0078, r24
	}

}
    16a6:	cf 91       	pop	r28
    16a8:	df 91       	pop	r29
    16aa:	8f 91       	pop	r24
    16ac:	0f 90       	pop	r0
    16ae:	0f be       	out	0x3f, r0	; 63
    16b0:	0f 90       	pop	r0
    16b2:	1f 90       	pop	r1
    16b4:	18 95       	reti

000016b6 <INT0_reset_init>:

//set up timer resetting interrupt
void INT0_reset_init(void){
    16b6:	df 93       	push	r29
    16b8:	cf 93       	push	r28
    16ba:	cd b7       	in	r28, 0x3d	; 61
    16bc:	de b7       	in	r29, 0x3e	; 62
	GICR|=(1<<INT0);
    16be:	ab e5       	ldi	r26, 0x5B	; 91
    16c0:	b0 e0       	ldi	r27, 0x00	; 0
    16c2:	eb e5       	ldi	r30, 0x5B	; 91
    16c4:	f0 e0       	ldi	r31, 0x00	; 0
    16c6:	80 81       	ld	r24, Z
    16c8:	80 64       	ori	r24, 0x40	; 64
    16ca:	8c 93       	st	X, r24
	MCUCR|=(1<<ISC01);
    16cc:	a5 e5       	ldi	r26, 0x55	; 85
    16ce:	b0 e0       	ldi	r27, 0x00	; 0
    16d0:	e5 e5       	ldi	r30, 0x55	; 85
    16d2:	f0 e0       	ldi	r31, 0x00	; 0
    16d4:	80 81       	ld	r24, Z
    16d6:	82 60       	ori	r24, 0x02	; 2
    16d8:	8c 93       	st	X, r24
}
    16da:	cf 91       	pop	r28
    16dc:	df 91       	pop	r29
    16de:	08 95       	ret

000016e0 <__vector_1>:

ISR(INT0_vect){
    16e0:	1f 92       	push	r1
    16e2:	0f 92       	push	r0
    16e4:	0f b6       	in	r0, 0x3f	; 63
    16e6:	0f 92       	push	r0
    16e8:	11 24       	eor	r1, r1
    16ea:	df 93       	push	r29
    16ec:	cf 93       	push	r28
    16ee:	cd b7       	in	r28, 0x3d	; 61
    16f0:	de b7       	in	r29, 0x3e	; 62
	//reset timer values
	sec0=0;
    16f2:	10 92 6d 00 	sts	0x006D, r1
    16f6:	10 92 6c 00 	sts	0x006C, r1
	sec1=0;
    16fa:	10 92 6b 00 	sts	0x006B, r1
    16fe:	10 92 6a 00 	sts	0x006A, r1
	min0=0;
    1702:	10 92 71 00 	sts	0x0071, r1
    1706:	10 92 70 00 	sts	0x0070, r1
	min1=0;
    170a:	10 92 6f 00 	sts	0x006F, r1
    170e:	10 92 6e 00 	sts	0x006E, r1
	hour0=0;
    1712:	10 92 75 00 	sts	0x0075, r1
    1716:	10 92 74 00 	sts	0x0074, r1
	hour1=0;
    171a:	10 92 73 00 	sts	0x0073, r1
    171e:	10 92 72 00 	sts	0x0072, r1
}
    1722:	cf 91       	pop	r28
    1724:	df 91       	pop	r29
    1726:	0f 90       	pop	r0
    1728:	0f be       	out	0x3f, r0	; 63
    172a:	0f 90       	pop	r0
    172c:	1f 90       	pop	r1
    172e:	18 95       	reti

00001730 <INT1_pause_init>:

//set up timer pause interrupt
void INT1_pause_init(void){
    1730:	df 93       	push	r29
    1732:	cf 93       	push	r28
    1734:	cd b7       	in	r28, 0x3d	; 61
    1736:	de b7       	in	r29, 0x3e	; 62
	GICR|=(1<<INT1);
    1738:	ab e5       	ldi	r26, 0x5B	; 91
    173a:	b0 e0       	ldi	r27, 0x00	; 0
    173c:	eb e5       	ldi	r30, 0x5B	; 91
    173e:	f0 e0       	ldi	r31, 0x00	; 0
    1740:	80 81       	ld	r24, Z
    1742:	80 68       	ori	r24, 0x80	; 128
    1744:	8c 93       	st	X, r24
	MCUCR|=(1<<ISC11)|(1<<ISC10);
    1746:	a5 e5       	ldi	r26, 0x55	; 85
    1748:	b0 e0       	ldi	r27, 0x00	; 0
    174a:	e5 e5       	ldi	r30, 0x55	; 85
    174c:	f0 e0       	ldi	r31, 0x00	; 0
    174e:	80 81       	ld	r24, Z
    1750:	8c 60       	ori	r24, 0x0C	; 12
    1752:	8c 93       	st	X, r24
}
    1754:	cf 91       	pop	r28
    1756:	df 91       	pop	r29
    1758:	08 95       	ret

0000175a <__vector_2>:

ISR(INT1_vect){
    175a:	1f 92       	push	r1
    175c:	0f 92       	push	r0
    175e:	0f b6       	in	r0, 0x3f	; 63
    1760:	0f 92       	push	r0
    1762:	11 24       	eor	r1, r1
    1764:	2f 93       	push	r18
    1766:	3f 93       	push	r19
    1768:	4f 93       	push	r20
    176a:	5f 93       	push	r21
    176c:	6f 93       	push	r22
    176e:	7f 93       	push	r23
    1770:	8f 93       	push	r24
    1772:	9f 93       	push	r25
    1774:	af 93       	push	r26
    1776:	bf 93       	push	r27
    1778:	ef 93       	push	r30
    177a:	ff 93       	push	r31
    177c:	df 93       	push	r29
    177e:	cf 93       	push	r28
    1780:	cd b7       	in	r28, 0x3d	; 61
    1782:	de b7       	in	r29, 0x3e	; 62
    1784:	2e 97       	sbiw	r28, 0x0e	; 14
    1786:	de bf       	out	0x3e, r29	; 62
    1788:	cd bf       	out	0x3d, r28	; 61
    178a:	80 e0       	ldi	r24, 0x00	; 0
    178c:	90 e0       	ldi	r25, 0x00	; 0
    178e:	a0 ef       	ldi	r26, 0xF0	; 240
    1790:	b1 e4       	ldi	r27, 0x41	; 65
    1792:	8b 87       	std	Y+11, r24	; 0x0b
    1794:	9c 87       	std	Y+12, r25	; 0x0c
    1796:	ad 87       	std	Y+13, r26	; 0x0d
    1798:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    179a:	6b 85       	ldd	r22, Y+11	; 0x0b
    179c:	7c 85       	ldd	r23, Y+12	; 0x0c
    179e:	8d 85       	ldd	r24, Y+13	; 0x0d
    17a0:	9e 85       	ldd	r25, Y+14	; 0x0e
    17a2:	20 e0       	ldi	r18, 0x00	; 0
    17a4:	30 e0       	ldi	r19, 0x00	; 0
    17a6:	4a e7       	ldi	r20, 0x7A	; 122
    17a8:	55 e4       	ldi	r21, 0x45	; 69
    17aa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    17ae:	dc 01       	movw	r26, r24
    17b0:	cb 01       	movw	r24, r22
    17b2:	8f 83       	std	Y+7, r24	; 0x07
    17b4:	98 87       	std	Y+8, r25	; 0x08
    17b6:	a9 87       	std	Y+9, r26	; 0x09
    17b8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    17ba:	6f 81       	ldd	r22, Y+7	; 0x07
    17bc:	78 85       	ldd	r23, Y+8	; 0x08
    17be:	89 85       	ldd	r24, Y+9	; 0x09
    17c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    17c2:	20 e0       	ldi	r18, 0x00	; 0
    17c4:	30 e0       	ldi	r19, 0x00	; 0
    17c6:	40 e8       	ldi	r20, 0x80	; 128
    17c8:	5f e3       	ldi	r21, 0x3F	; 63
    17ca:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    17ce:	88 23       	and	r24, r24
    17d0:	2c f4       	brge	.+10     	; 0x17dc <__vector_2+0x82>
		__ticks = 1;
    17d2:	81 e0       	ldi	r24, 0x01	; 1
    17d4:	90 e0       	ldi	r25, 0x00	; 0
    17d6:	9e 83       	std	Y+6, r25	; 0x06
    17d8:	8d 83       	std	Y+5, r24	; 0x05
    17da:	3f c0       	rjmp	.+126    	; 0x185a <__vector_2+0x100>
	else if (__tmp > 65535)
    17dc:	6f 81       	ldd	r22, Y+7	; 0x07
    17de:	78 85       	ldd	r23, Y+8	; 0x08
    17e0:	89 85       	ldd	r24, Y+9	; 0x09
    17e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    17e4:	20 e0       	ldi	r18, 0x00	; 0
    17e6:	3f ef       	ldi	r19, 0xFF	; 255
    17e8:	4f e7       	ldi	r20, 0x7F	; 127
    17ea:	57 e4       	ldi	r21, 0x47	; 71
    17ec:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    17f0:	18 16       	cp	r1, r24
    17f2:	4c f5       	brge	.+82     	; 0x1846 <__vector_2+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17f4:	6b 85       	ldd	r22, Y+11	; 0x0b
    17f6:	7c 85       	ldd	r23, Y+12	; 0x0c
    17f8:	8d 85       	ldd	r24, Y+13	; 0x0d
    17fa:	9e 85       	ldd	r25, Y+14	; 0x0e
    17fc:	20 e0       	ldi	r18, 0x00	; 0
    17fe:	30 e0       	ldi	r19, 0x00	; 0
    1800:	40 e2       	ldi	r20, 0x20	; 32
    1802:	51 e4       	ldi	r21, 0x41	; 65
    1804:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1808:	dc 01       	movw	r26, r24
    180a:	cb 01       	movw	r24, r22
    180c:	bc 01       	movw	r22, r24
    180e:	cd 01       	movw	r24, r26
    1810:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1814:	dc 01       	movw	r26, r24
    1816:	cb 01       	movw	r24, r22
    1818:	9e 83       	std	Y+6, r25	; 0x06
    181a:	8d 83       	std	Y+5, r24	; 0x05
    181c:	0f c0       	rjmp	.+30     	; 0x183c <__vector_2+0xe2>
    181e:	80 e9       	ldi	r24, 0x90	; 144
    1820:	91 e0       	ldi	r25, 0x01	; 1
    1822:	9c 83       	std	Y+4, r25	; 0x04
    1824:	8b 83       	std	Y+3, r24	; 0x03
    1826:	8b 81       	ldd	r24, Y+3	; 0x03
    1828:	9c 81       	ldd	r25, Y+4	; 0x04
    182a:	01 97       	sbiw	r24, 0x01	; 1
    182c:	f1 f7       	brne	.-4      	; 0x182a <__vector_2+0xd0>
    182e:	9c 83       	std	Y+4, r25	; 0x04
    1830:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1832:	8d 81       	ldd	r24, Y+5	; 0x05
    1834:	9e 81       	ldd	r25, Y+6	; 0x06
    1836:	01 97       	sbiw	r24, 0x01	; 1
    1838:	9e 83       	std	Y+6, r25	; 0x06
    183a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    183c:	8d 81       	ldd	r24, Y+5	; 0x05
    183e:	9e 81       	ldd	r25, Y+6	; 0x06
    1840:	00 97       	sbiw	r24, 0x00	; 0
    1842:	69 f7       	brne	.-38     	; 0x181e <__vector_2+0xc4>
    1844:	14 c0       	rjmp	.+40     	; 0x186e <__vector_2+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1846:	6f 81       	ldd	r22, Y+7	; 0x07
    1848:	78 85       	ldd	r23, Y+8	; 0x08
    184a:	89 85       	ldd	r24, Y+9	; 0x09
    184c:	9a 85       	ldd	r25, Y+10	; 0x0a
    184e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1852:	dc 01       	movw	r26, r24
    1854:	cb 01       	movw	r24, r22
    1856:	9e 83       	std	Y+6, r25	; 0x06
    1858:	8d 83       	std	Y+5, r24	; 0x05
    185a:	8d 81       	ldd	r24, Y+5	; 0x05
    185c:	9e 81       	ldd	r25, Y+6	; 0x06
    185e:	9a 83       	std	Y+2, r25	; 0x02
    1860:	89 83       	std	Y+1, r24	; 0x01
    1862:	89 81       	ldd	r24, Y+1	; 0x01
    1864:	9a 81       	ldd	r25, Y+2	; 0x02
    1866:	01 97       	sbiw	r24, 0x01	; 1
    1868:	f1 f7       	brne	.-4      	; 0x1866 <__vector_2+0x10c>
    186a:	9a 83       	std	Y+2, r25	; 0x02
    186c:	89 83       	std	Y+1, r24	; 0x01
	//disable timer from clk select table
	_delay_ms(30);
	if(PIND&(1<<3))
    186e:	e0 e3       	ldi	r30, 0x30	; 48
    1870:	f0 e0       	ldi	r31, 0x00	; 0
    1872:	80 81       	ld	r24, Z
    1874:	88 2f       	mov	r24, r24
    1876:	90 e0       	ldi	r25, 0x00	; 0
    1878:	88 70       	andi	r24, 0x08	; 8
    187a:	90 70       	andi	r25, 0x00	; 0
    187c:	00 97       	sbiw	r24, 0x00	; 0
    187e:	51 f0       	breq	.+20     	; 0x1894 <__vector_2+0x13a>
	{
		TCCR1B&=~(1<<CS12)&~(1<<CS10);
    1880:	ae e4       	ldi	r26, 0x4E	; 78
    1882:	b0 e0       	ldi	r27, 0x00	; 0
    1884:	ee e4       	ldi	r30, 0x4E	; 78
    1886:	f0 e0       	ldi	r31, 0x00	; 0
    1888:	80 81       	ld	r24, Z
    188a:	8a 7f       	andi	r24, 0xFA	; 250
    188c:	8c 93       	st	X, r24
		pause_flag=1;
    188e:	81 e0       	ldi	r24, 0x01	; 1
    1890:	80 93 76 00 	sts	0x0076, r24
	}

	//turn off buzzer
	PORTD&=~(1<<0);
    1894:	a2 e3       	ldi	r26, 0x32	; 50
    1896:	b0 e0       	ldi	r27, 0x00	; 0
    1898:	e2 e3       	ldi	r30, 0x32	; 50
    189a:	f0 e0       	ldi	r31, 0x00	; 0
    189c:	80 81       	ld	r24, Z
    189e:	8e 7f       	andi	r24, 0xFE	; 254
    18a0:	8c 93       	st	X, r24
}
    18a2:	2e 96       	adiw	r28, 0x0e	; 14
    18a4:	de bf       	out	0x3e, r29	; 62
    18a6:	cd bf       	out	0x3d, r28	; 61
    18a8:	cf 91       	pop	r28
    18aa:	df 91       	pop	r29
    18ac:	ff 91       	pop	r31
    18ae:	ef 91       	pop	r30
    18b0:	bf 91       	pop	r27
    18b2:	af 91       	pop	r26
    18b4:	9f 91       	pop	r25
    18b6:	8f 91       	pop	r24
    18b8:	7f 91       	pop	r23
    18ba:	6f 91       	pop	r22
    18bc:	5f 91       	pop	r21
    18be:	4f 91       	pop	r20
    18c0:	3f 91       	pop	r19
    18c2:	2f 91       	pop	r18
    18c4:	0f 90       	pop	r0
    18c6:	0f be       	out	0x3f, r0	; 63
    18c8:	0f 90       	pop	r0
    18ca:	1f 90       	pop	r1
    18cc:	18 95       	reti

000018ce <INT2_resume_init>:

//set up timer resuming interrupt
void INT2_resume_init(void){
    18ce:	df 93       	push	r29
    18d0:	cf 93       	push	r28
    18d2:	cd b7       	in	r28, 0x3d	; 61
    18d4:	de b7       	in	r29, 0x3e	; 62
	GICR|=(1<<INT2);
    18d6:	ab e5       	ldi	r26, 0x5B	; 91
    18d8:	b0 e0       	ldi	r27, 0x00	; 0
    18da:	eb e5       	ldi	r30, 0x5B	; 91
    18dc:	f0 e0       	ldi	r31, 0x00	; 0
    18de:	80 81       	ld	r24, Z
    18e0:	80 62       	ori	r24, 0x20	; 32
    18e2:	8c 93       	st	X, r24
	MCUCSR&=~(1<<ISC2);
    18e4:	a4 e5       	ldi	r26, 0x54	; 84
    18e6:	b0 e0       	ldi	r27, 0x00	; 0
    18e8:	e4 e5       	ldi	r30, 0x54	; 84
    18ea:	f0 e0       	ldi	r31, 0x00	; 0
    18ec:	80 81       	ld	r24, Z
    18ee:	8f 7b       	andi	r24, 0xBF	; 191
    18f0:	8c 93       	st	X, r24
}
    18f2:	cf 91       	pop	r28
    18f4:	df 91       	pop	r29
    18f6:	08 95       	ret

000018f8 <__vector_3>:

ISR(INT2_vect){
    18f8:	1f 92       	push	r1
    18fa:	0f 92       	push	r0
    18fc:	0f b6       	in	r0, 0x3f	; 63
    18fe:	0f 92       	push	r0
    1900:	11 24       	eor	r1, r1
    1902:	8f 93       	push	r24
    1904:	af 93       	push	r26
    1906:	bf 93       	push	r27
    1908:	ef 93       	push	r30
    190a:	ff 93       	push	r31
    190c:	df 93       	push	r29
    190e:	cf 93       	push	r28
    1910:	cd b7       	in	r28, 0x3d	; 61
    1912:	de b7       	in	r29, 0x3e	; 62
	pause_flag=0;
    1914:	10 92 76 00 	sts	0x0076, r1
	//resume timer
	TCCR1B|=(1<<CS12)|(1<<CS10);
    1918:	ae e4       	ldi	r26, 0x4E	; 78
    191a:	b0 e0       	ldi	r27, 0x00	; 0
    191c:	ee e4       	ldi	r30, 0x4E	; 78
    191e:	f0 e0       	ldi	r31, 0x00	; 0
    1920:	80 81       	ld	r24, Z
    1922:	85 60       	ori	r24, 0x05	; 5
    1924:	8c 93       	st	X, r24
}
    1926:	cf 91       	pop	r28
    1928:	df 91       	pop	r29
    192a:	ff 91       	pop	r31
    192c:	ef 91       	pop	r30
    192e:	bf 91       	pop	r27
    1930:	af 91       	pop	r26
    1932:	8f 91       	pop	r24
    1934:	0f 90       	pop	r0
    1936:	0f be       	out	0x3f, r0	; 63
    1938:	0f 90       	pop	r0
    193a:	1f 90       	pop	r1
    193c:	18 95       	reti

0000193e <main>:


int main(void){
    193e:	df 93       	push	r29
    1940:	cf 93       	push	r28
    1942:	cd b7       	in	r28, 0x3d	; 61
    1944:	de b7       	in	r29, 0x3e	; 62

	//first 4 PORTC pins o/p into decoder, initially set to zero
	DDRC|=0x0F;
    1946:	a4 e3       	ldi	r26, 0x34	; 52
    1948:	b0 e0       	ldi	r27, 0x00	; 0
    194a:	e4 e3       	ldi	r30, 0x34	; 52
    194c:	f0 e0       	ldi	r31, 0x00	; 0
    194e:	80 81       	ld	r24, Z
    1950:	8f 60       	ori	r24, 0x0F	; 15
    1952:	8c 93       	st	X, r24
	PORTC&=0xF0;
    1954:	a5 e3       	ldi	r26, 0x35	; 53
    1956:	b0 e0       	ldi	r27, 0x00	; 0
    1958:	e5 e3       	ldi	r30, 0x35	; 53
    195a:	f0 e0       	ldi	r31, 0x00	; 0
    195c:	80 81       	ld	r24, Z
    195e:	80 7f       	andi	r24, 0xF0	; 240
    1960:	8c 93       	st	X, r24

	//first 6 pins o/p for 7 segment enable/disable pins, initially enable all
	DDRA|=0x3F;
    1962:	aa e3       	ldi	r26, 0x3A	; 58
    1964:	b0 e0       	ldi	r27, 0x00	; 0
    1966:	ea e3       	ldi	r30, 0x3A	; 58
    1968:	f0 e0       	ldi	r31, 0x00	; 0
    196a:	80 81       	ld	r24, Z
    196c:	8f 63       	ori	r24, 0x3F	; 63
    196e:	8c 93       	st	X, r24
	PORTA|=0x3F;
    1970:	ab e3       	ldi	r26, 0x3B	; 59
    1972:	b0 e0       	ldi	r27, 0x00	; 0
    1974:	eb e3       	ldi	r30, 0x3B	; 59
    1976:	f0 e0       	ldi	r31, 0x00	; 0
    1978:	80 81       	ld	r24, Z
    197a:	8f 63       	ori	r24, 0x3F	; 63
    197c:	8c 93       	st	X, r24

	//push button takes input trigger for pause interrupt (INT1 at PD3)
	DDRD&=~(1<<PD3);
    197e:	a1 e3       	ldi	r26, 0x31	; 49
    1980:	b0 e0       	ldi	r27, 0x00	; 0
    1982:	e1 e3       	ldi	r30, 0x31	; 49
    1984:	f0 e0       	ldi	r31, 0x00	; 0
    1986:	80 81       	ld	r24, Z
    1988:	87 7f       	andi	r24, 0xF7	; 247
    198a:	8c 93       	st	X, r24

	//0->7 pins in PORTB are push button inputs with internal pullup
	DDRB=0x00;
    198c:	e7 e3       	ldi	r30, 0x37	; 55
    198e:	f0 e0       	ldi	r31, 0x00	; 0
    1990:	10 82       	st	Z, r1
	PORTB=0xFF;
    1992:	e8 e3       	ldi	r30, 0x38	; 56
    1994:	f0 e0       	ldi	r31, 0x00	; 0
    1996:	8f ef       	ldi	r24, 0xFF	; 255
    1998:	80 83       	st	Z, r24

	//push button for reset interrupt (INT0 at PD2)
	DDRD&=~(1<<PD2);
    199a:	a1 e3       	ldi	r26, 0x31	; 49
    199c:	b0 e0       	ldi	r27, 0x00	; 0
    199e:	e1 e3       	ldi	r30, 0x31	; 49
    19a0:	f0 e0       	ldi	r31, 0x00	; 0
    19a2:	80 81       	ld	r24, Z
    19a4:	8b 7f       	andi	r24, 0xFB	; 251
    19a6:	8c 93       	st	X, r24
	PORTD|=(1<<PD2);
    19a8:	a2 e3       	ldi	r26, 0x32	; 50
    19aa:	b0 e0       	ldi	r27, 0x00	; 0
    19ac:	e2 e3       	ldi	r30, 0x32	; 50
    19ae:	f0 e0       	ldi	r31, 0x00	; 0
    19b0:	80 81       	ld	r24, Z
    19b2:	84 60       	ori	r24, 0x04	; 4
    19b4:	8c 93       	st	X, r24

	//2 LEDs describing mode at PD4,PD5
	DDRD|=0x30;
    19b6:	a1 e3       	ldi	r26, 0x31	; 49
    19b8:	b0 e0       	ldi	r27, 0x00	; 0
    19ba:	e1 e3       	ldi	r30, 0x31	; 49
    19bc:	f0 e0       	ldi	r31, 0x00	; 0
    19be:	80 81       	ld	r24, Z
    19c0:	80 63       	ori	r24, 0x30	; 48
    19c2:	8c 93       	st	X, r24
	PORTD&=~0x30;
    19c4:	a2 e3       	ldi	r26, 0x32	; 50
    19c6:	b0 e0       	ldi	r27, 0x00	; 0
    19c8:	e2 e3       	ldi	r30, 0x32	; 50
    19ca:	f0 e0       	ldi	r31, 0x00	; 0
    19cc:	80 81       	ld	r24, Z
    19ce:	8f 7c       	andi	r24, 0xCF	; 207
    19d0:	8c 93       	st	X, r24

	//buzzer alarm, initially silent
	DDRD|=(1<<0);
    19d2:	a1 e3       	ldi	r26, 0x31	; 49
    19d4:	b0 e0       	ldi	r27, 0x00	; 0
    19d6:	e1 e3       	ldi	r30, 0x31	; 49
    19d8:	f0 e0       	ldi	r31, 0x00	; 0
    19da:	80 81       	ld	r24, Z
    19dc:	81 60       	ori	r24, 0x01	; 1
    19de:	8c 93       	st	X, r24
	PORTD&=~(1<<0);
    19e0:	a2 e3       	ldi	r26, 0x32	; 50
    19e2:	b0 e0       	ldi	r27, 0x00	; 0
    19e4:	e2 e3       	ldi	r30, 0x32	; 50
    19e6:	f0 e0       	ldi	r31, 0x00	; 0
    19e8:	80 81       	ld	r24, Z
    19ea:	8e 7f       	andi	r24, 0xFE	; 254
    19ec:	8c 93       	st	X, r24

	//Initialise timer1 and interrupts
	Timer1_init();
    19ee:	0e 94 1a 0b 	call	0x1634	; 0x1634 <Timer1_init>
	INT0_reset_init();
    19f2:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <INT0_reset_init>
	INT1_pause_init();
    19f6:	0e 94 98 0b 	call	0x1730	; 0x1730 <INT1_pause_init>
	INT2_resume_init();
    19fa:	0e 94 67 0c 	call	0x18ce	; 0x18ce <INT2_resume_init>

	//enable global interrupt pin for timer1 and interrupts
	SREG|=(1<<7);
    19fe:	af e5       	ldi	r26, 0x5F	; 95
    1a00:	b0 e0       	ldi	r27, 0x00	; 0
    1a02:	ef e5       	ldi	r30, 0x5F	; 95
    1a04:	f0 e0       	ldi	r31, 0x00	; 0
    1a06:	80 81       	ld	r24, Z
    1a08:	80 68       	ori	r24, 0x80	; 128
    1a0a:	8c 93       	st	X, r24


	while(1)
	{
		//Function to display all 7 segments at once
		show_segments();
    1a0c:	0e 94 a3 05 	call	0xb46	; 0xb46 <show_segments>

		if(ISR_countUp_flag)
    1a10:	80 91 77 00 	lds	r24, 0x0077
    1a14:	88 23       	and	r24, r24
    1a16:	21 f0       	breq	.+8      	; 0x1a20 <main+0xe2>
		{
			Timer_countUp();
    1a18:	0e 94 64 09 	call	0x12c8	; 0x12c8 <Timer_countUp>
			ISR_countUp_flag=0;
    1a1c:	10 92 77 00 	sts	0x0077, r1
		}

		if(ISR_countDown_flag)
    1a20:	80 91 78 00 	lds	r24, 0x0078
    1a24:	88 23       	and	r24, r24
    1a26:	21 f0       	breq	.+8      	; 0x1a30 <main+0xf2>
		{
			Timer_countDown();
    1a28:	0e 94 38 0a 	call	0x1470	; 0x1470 <Timer_countDown>
			ISR_countDown_flag=0;
    1a2c:	10 92 78 00 	sts	0x0078, r1
		}

		//toggle mode button, timer must be paused
		if((!(PINB&(1<<7))) && pause_flag)
    1a30:	e6 e3       	ldi	r30, 0x36	; 54
    1a32:	f0 e0       	ldi	r31, 0x00	; 0
    1a34:	80 81       	ld	r24, Z
    1a36:	88 23       	and	r24, r24
    1a38:	94 f0       	brlt	.+36     	; 0x1a5e <main+0x120>
    1a3a:	80 91 76 00 	lds	r24, 0x0076
    1a3e:	88 23       	and	r24, r24
    1a40:	71 f0       	breq	.+28     	; 0x1a5e <main+0x120>
		{
			timer_mode_flag^=1;  //mode flag toggled
    1a42:	80 91 68 00 	lds	r24, 0x0068
    1a46:	91 e0       	ldi	r25, 0x01	; 1
    1a48:	89 27       	eor	r24, r25
    1a4a:	80 93 68 00 	sts	0x0068, r24
    1a4e:	02 c0       	rjmp	.+4      	; 0x1a54 <main+0x116>
			while(!(PINB&(1<<7)))
			{
				show_segments();
    1a50:	0e 94 a3 05 	call	0xb46	; 0xb46 <show_segments>

		//toggle mode button, timer must be paused
		if((!(PINB&(1<<7))) && pause_flag)
		{
			timer_mode_flag^=1;  //mode flag toggled
			while(!(PINB&(1<<7)))
    1a54:	e6 e3       	ldi	r30, 0x36	; 54
    1a56:	f0 e0       	ldi	r31, 0x00	; 0
    1a58:	80 81       	ld	r24, Z
    1a5a:	88 23       	and	r24, r24
    1a5c:	cc f7       	brge	.-14     	; 0x1a50 <main+0x112>
				show_segments();
			}
		}

		//TIMER mode red LED
		if(timer_mode_flag==1)
    1a5e:	80 91 68 00 	lds	r24, 0x0068
    1a62:	81 30       	cpi	r24, 0x01	; 1
    1a64:	71 f4       	brne	.+28     	; 0x1a82 <main+0x144>
		{
			PORTD|=(1<<4);
    1a66:	a2 e3       	ldi	r26, 0x32	; 50
    1a68:	b0 e0       	ldi	r27, 0x00	; 0
    1a6a:	e2 e3       	ldi	r30, 0x32	; 50
    1a6c:	f0 e0       	ldi	r31, 0x00	; 0
    1a6e:	80 81       	ld	r24, Z
    1a70:	80 61       	ori	r24, 0x10	; 16
    1a72:	8c 93       	st	X, r24
			PORTD&=~(1<<5);
    1a74:	a2 e3       	ldi	r26, 0x32	; 50
    1a76:	b0 e0       	ldi	r27, 0x00	; 0
    1a78:	e2 e3       	ldi	r30, 0x32	; 50
    1a7a:	f0 e0       	ldi	r31, 0x00	; 0
    1a7c:	80 81       	ld	r24, Z
    1a7e:	8f 7d       	andi	r24, 0xDF	; 223
    1a80:	8c 93       	st	X, r24
		}

		//COUNTDOWN mode yellow LED
		if(timer_mode_flag==0)
    1a82:	80 91 68 00 	lds	r24, 0x0068
    1a86:	88 23       	and	r24, r24
    1a88:	71 f4       	brne	.+28     	; 0x1aa6 <main+0x168>
		{
			PORTD|=(1<<5);
    1a8a:	a2 e3       	ldi	r26, 0x32	; 50
    1a8c:	b0 e0       	ldi	r27, 0x00	; 0
    1a8e:	e2 e3       	ldi	r30, 0x32	; 50
    1a90:	f0 e0       	ldi	r31, 0x00	; 0
    1a92:	80 81       	ld	r24, Z
    1a94:	80 62       	ori	r24, 0x20	; 32
    1a96:	8c 93       	st	X, r24
			PORTD&=~(1<<4);
    1a98:	a2 e3       	ldi	r26, 0x32	; 50
    1a9a:	b0 e0       	ldi	r27, 0x00	; 0
    1a9c:	e2 e3       	ldi	r30, 0x32	; 50
    1a9e:	f0 e0       	ldi	r31, 0x00	; 0
    1aa0:	80 81       	ld	r24, Z
    1aa2:	8f 7e       	andi	r24, 0xEF	; 239
    1aa4:	8c 93       	st	X, r24
		//All manual timer adjustments.
		//Timer must be paused while adjusting.


		//decrementing hours PB0
		if((!(PINB&(1<<0))) && pause_flag)
    1aa6:	e6 e3       	ldi	r30, 0x36	; 54
    1aa8:	f0 e0       	ldi	r31, 0x00	; 0
    1aaa:	80 81       	ld	r24, Z
    1aac:	88 2f       	mov	r24, r24
    1aae:	90 e0       	ldi	r25, 0x00	; 0
    1ab0:	81 70       	andi	r24, 0x01	; 1
    1ab2:	90 70       	andi	r25, 0x00	; 0
    1ab4:	00 97       	sbiw	r24, 0x00	; 0
    1ab6:	09 f0       	breq	.+2      	; 0x1aba <main+0x17c>
    1ab8:	55 c0       	rjmp	.+170    	; 0x1b64 <main+0x226>
    1aba:	80 91 76 00 	lds	r24, 0x0076
    1abe:	88 23       	and	r24, r24
    1ac0:	09 f4       	brne	.+2      	; 0x1ac4 <main+0x186>
    1ac2:	50 c0       	rjmp	.+160    	; 0x1b64 <main+0x226>
		{
			if(hour0!=0)
    1ac4:	80 91 74 00 	lds	r24, 0x0074
    1ac8:	90 91 75 00 	lds	r25, 0x0075
    1acc:	00 97       	sbiw	r24, 0x00	; 0
    1ace:	51 f0       	breq	.+20     	; 0x1ae4 <main+0x1a6>
			{
				hour0--;
    1ad0:	80 91 74 00 	lds	r24, 0x0074
    1ad4:	90 91 75 00 	lds	r25, 0x0075
    1ad8:	01 97       	sbiw	r24, 0x01	; 1
    1ada:	90 93 75 00 	sts	0x0075, r25
    1ade:	80 93 74 00 	sts	0x0074, r24
    1ae2:	37 c0       	rjmp	.+110    	; 0x1b52 <main+0x214>
			}
			else if(hour0==0 && hour1!=0)
    1ae4:	80 91 74 00 	lds	r24, 0x0074
    1ae8:	90 91 75 00 	lds	r25, 0x0075
    1aec:	00 97       	sbiw	r24, 0x00	; 0
    1aee:	b1 f4       	brne	.+44     	; 0x1b1c <main+0x1de>
    1af0:	80 91 72 00 	lds	r24, 0x0072
    1af4:	90 91 73 00 	lds	r25, 0x0073
    1af8:	00 97       	sbiw	r24, 0x00	; 0
    1afa:	81 f0       	breq	.+32     	; 0x1b1c <main+0x1de>
			{
				hour0=9;
    1afc:	89 e0       	ldi	r24, 0x09	; 9
    1afe:	90 e0       	ldi	r25, 0x00	; 0
    1b00:	90 93 75 00 	sts	0x0075, r25
    1b04:	80 93 74 00 	sts	0x0074, r24
				hour1--;
    1b08:	80 91 72 00 	lds	r24, 0x0072
    1b0c:	90 91 73 00 	lds	r25, 0x0073
    1b10:	01 97       	sbiw	r24, 0x01	; 1
    1b12:	90 93 73 00 	sts	0x0073, r25
    1b16:	80 93 72 00 	sts	0x0072, r24
    1b1a:	1b c0       	rjmp	.+54     	; 0x1b52 <main+0x214>
			}
			else if(hour0==0 && hour1==0)
    1b1c:	80 91 74 00 	lds	r24, 0x0074
    1b20:	90 91 75 00 	lds	r25, 0x0075
    1b24:	00 97       	sbiw	r24, 0x00	; 0
    1b26:	a9 f4       	brne	.+42     	; 0x1b52 <main+0x214>
    1b28:	80 91 72 00 	lds	r24, 0x0072
    1b2c:	90 91 73 00 	lds	r25, 0x0073
    1b30:	00 97       	sbiw	r24, 0x00	; 0
    1b32:	79 f4       	brne	.+30     	; 0x1b52 <main+0x214>
			{
				hour0=9;
    1b34:	89 e0       	ldi	r24, 0x09	; 9
    1b36:	90 e0       	ldi	r25, 0x00	; 0
    1b38:	90 93 75 00 	sts	0x0075, r25
    1b3c:	80 93 74 00 	sts	0x0074, r24
				hour1=5;
    1b40:	85 e0       	ldi	r24, 0x05	; 5
    1b42:	90 e0       	ldi	r25, 0x00	; 0
    1b44:	90 93 73 00 	sts	0x0073, r25
    1b48:	80 93 72 00 	sts	0x0072, r24
    1b4c:	02 c0       	rjmp	.+4      	; 0x1b52 <main+0x214>
			}

			while(!(PINB&(1<<0)))
			{
				show_segments();
    1b4e:	0e 94 a3 05 	call	0xb46	; 0xb46 <show_segments>
			{
				hour0=9;
				hour1=5;
			}

			while(!(PINB&(1<<0)))
    1b52:	e6 e3       	ldi	r30, 0x36	; 54
    1b54:	f0 e0       	ldi	r31, 0x00	; 0
    1b56:	80 81       	ld	r24, Z
    1b58:	88 2f       	mov	r24, r24
    1b5a:	90 e0       	ldi	r25, 0x00	; 0
    1b5c:	81 70       	andi	r24, 0x01	; 1
    1b5e:	90 70       	andi	r25, 0x00	; 0
    1b60:	00 97       	sbiw	r24, 0x00	; 0
    1b62:	a9 f3       	breq	.-22     	; 0x1b4e <main+0x210>

		}


		//incrementing hours PB1
		if((!(PINB&(1<<1))) && pause_flag)
    1b64:	e6 e3       	ldi	r30, 0x36	; 54
    1b66:	f0 e0       	ldi	r31, 0x00	; 0
    1b68:	80 81       	ld	r24, Z
    1b6a:	88 2f       	mov	r24, r24
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	82 70       	andi	r24, 0x02	; 2
    1b70:	90 70       	andi	r25, 0x00	; 0
    1b72:	00 97       	sbiw	r24, 0x00	; 0
    1b74:	09 f0       	breq	.+2      	; 0x1b78 <main+0x23a>
    1b76:	46 c0       	rjmp	.+140    	; 0x1c04 <main+0x2c6>
    1b78:	80 91 76 00 	lds	r24, 0x0076
    1b7c:	88 23       	and	r24, r24
    1b7e:	09 f4       	brne	.+2      	; 0x1b82 <main+0x244>
    1b80:	41 c0       	rjmp	.+130    	; 0x1c04 <main+0x2c6>
		{

			if(hour0!=9)
    1b82:	80 91 74 00 	lds	r24, 0x0074
    1b86:	90 91 75 00 	lds	r25, 0x0075
    1b8a:	89 30       	cpi	r24, 0x09	; 9
    1b8c:	91 05       	cpc	r25, r1
    1b8e:	51 f0       	breq	.+20     	; 0x1ba4 <main+0x266>
			{
				hour0++;
    1b90:	80 91 74 00 	lds	r24, 0x0074
    1b94:	90 91 75 00 	lds	r25, 0x0075
    1b98:	01 96       	adiw	r24, 0x01	; 1
    1b9a:	90 93 75 00 	sts	0x0075, r25
    1b9e:	80 93 74 00 	sts	0x0074, r24
    1ba2:	27 c0       	rjmp	.+78     	; 0x1bf2 <main+0x2b4>
			}
			else if(hour0==9 && hour1!=5)
    1ba4:	80 91 74 00 	lds	r24, 0x0074
    1ba8:	90 91 75 00 	lds	r25, 0x0075
    1bac:	89 30       	cpi	r24, 0x09	; 9
    1bae:	91 05       	cpc	r25, r1
    1bb0:	a9 f4       	brne	.+42     	; 0x1bdc <main+0x29e>
    1bb2:	80 91 72 00 	lds	r24, 0x0072
    1bb6:	90 91 73 00 	lds	r25, 0x0073
    1bba:	85 30       	cpi	r24, 0x05	; 5
    1bbc:	91 05       	cpc	r25, r1
    1bbe:	71 f0       	breq	.+28     	; 0x1bdc <main+0x29e>
			{
				hour0=0;
    1bc0:	10 92 75 00 	sts	0x0075, r1
    1bc4:	10 92 74 00 	sts	0x0074, r1
				hour1++;
    1bc8:	80 91 72 00 	lds	r24, 0x0072
    1bcc:	90 91 73 00 	lds	r25, 0x0073
    1bd0:	01 96       	adiw	r24, 0x01	; 1
    1bd2:	90 93 73 00 	sts	0x0073, r25
    1bd6:	80 93 72 00 	sts	0x0072, r24
    1bda:	0b c0       	rjmp	.+22     	; 0x1bf2 <main+0x2b4>
			}
			else
			{
				hour0=0;
    1bdc:	10 92 75 00 	sts	0x0075, r1
    1be0:	10 92 74 00 	sts	0x0074, r1
				hour1=0;
    1be4:	10 92 73 00 	sts	0x0073, r1
    1be8:	10 92 72 00 	sts	0x0072, r1
    1bec:	02 c0       	rjmp	.+4      	; 0x1bf2 <main+0x2b4>
			}

			while(!(PINB&(1<<1)))
			{
				show_segments();
    1bee:	0e 94 a3 05 	call	0xb46	; 0xb46 <show_segments>
			{
				hour0=0;
				hour1=0;
			}

			while(!(PINB&(1<<1)))
    1bf2:	e6 e3       	ldi	r30, 0x36	; 54
    1bf4:	f0 e0       	ldi	r31, 0x00	; 0
    1bf6:	80 81       	ld	r24, Z
    1bf8:	88 2f       	mov	r24, r24
    1bfa:	90 e0       	ldi	r25, 0x00	; 0
    1bfc:	82 70       	andi	r24, 0x02	; 2
    1bfe:	90 70       	andi	r25, 0x00	; 0
    1c00:	00 97       	sbiw	r24, 0x00	; 0
    1c02:	a9 f3       	breq	.-22     	; 0x1bee <main+0x2b0>
			}
		}


		//decrementing minutes PB3
		if((!(PINB&(1<<3))) && pause_flag)
    1c04:	e6 e3       	ldi	r30, 0x36	; 54
    1c06:	f0 e0       	ldi	r31, 0x00	; 0
    1c08:	80 81       	ld	r24, Z
    1c0a:	88 2f       	mov	r24, r24
    1c0c:	90 e0       	ldi	r25, 0x00	; 0
    1c0e:	88 70       	andi	r24, 0x08	; 8
    1c10:	90 70       	andi	r25, 0x00	; 0
    1c12:	00 97       	sbiw	r24, 0x00	; 0
    1c14:	09 f0       	breq	.+2      	; 0x1c18 <main+0x2da>
    1c16:	55 c0       	rjmp	.+170    	; 0x1cc2 <main+0x384>
    1c18:	80 91 76 00 	lds	r24, 0x0076
    1c1c:	88 23       	and	r24, r24
    1c1e:	09 f4       	brne	.+2      	; 0x1c22 <main+0x2e4>
    1c20:	50 c0       	rjmp	.+160    	; 0x1cc2 <main+0x384>
		{
			if(min0!=0)
    1c22:	80 91 70 00 	lds	r24, 0x0070
    1c26:	90 91 71 00 	lds	r25, 0x0071
    1c2a:	00 97       	sbiw	r24, 0x00	; 0
    1c2c:	51 f0       	breq	.+20     	; 0x1c42 <main+0x304>
			{
				min0--;
    1c2e:	80 91 70 00 	lds	r24, 0x0070
    1c32:	90 91 71 00 	lds	r25, 0x0071
    1c36:	01 97       	sbiw	r24, 0x01	; 1
    1c38:	90 93 71 00 	sts	0x0071, r25
    1c3c:	80 93 70 00 	sts	0x0070, r24
    1c40:	37 c0       	rjmp	.+110    	; 0x1cb0 <main+0x372>
			}
			else if(min0==0 && min1!=0)
    1c42:	80 91 70 00 	lds	r24, 0x0070
    1c46:	90 91 71 00 	lds	r25, 0x0071
    1c4a:	00 97       	sbiw	r24, 0x00	; 0
    1c4c:	b1 f4       	brne	.+44     	; 0x1c7a <main+0x33c>
    1c4e:	80 91 6e 00 	lds	r24, 0x006E
    1c52:	90 91 6f 00 	lds	r25, 0x006F
    1c56:	00 97       	sbiw	r24, 0x00	; 0
    1c58:	81 f0       	breq	.+32     	; 0x1c7a <main+0x33c>
			{
				min0=9;
    1c5a:	89 e0       	ldi	r24, 0x09	; 9
    1c5c:	90 e0       	ldi	r25, 0x00	; 0
    1c5e:	90 93 71 00 	sts	0x0071, r25
    1c62:	80 93 70 00 	sts	0x0070, r24
				min1--;
    1c66:	80 91 6e 00 	lds	r24, 0x006E
    1c6a:	90 91 6f 00 	lds	r25, 0x006F
    1c6e:	01 97       	sbiw	r24, 0x01	; 1
    1c70:	90 93 6f 00 	sts	0x006F, r25
    1c74:	80 93 6e 00 	sts	0x006E, r24
    1c78:	1b c0       	rjmp	.+54     	; 0x1cb0 <main+0x372>
			}
			else if(min0==0 && min1==0)
    1c7a:	80 91 70 00 	lds	r24, 0x0070
    1c7e:	90 91 71 00 	lds	r25, 0x0071
    1c82:	00 97       	sbiw	r24, 0x00	; 0
    1c84:	a9 f4       	brne	.+42     	; 0x1cb0 <main+0x372>
    1c86:	80 91 6e 00 	lds	r24, 0x006E
    1c8a:	90 91 6f 00 	lds	r25, 0x006F
    1c8e:	00 97       	sbiw	r24, 0x00	; 0
    1c90:	79 f4       	brne	.+30     	; 0x1cb0 <main+0x372>
			{
				min0=9;
    1c92:	89 e0       	ldi	r24, 0x09	; 9
    1c94:	90 e0       	ldi	r25, 0x00	; 0
    1c96:	90 93 71 00 	sts	0x0071, r25
    1c9a:	80 93 70 00 	sts	0x0070, r24
				min1=5;
    1c9e:	85 e0       	ldi	r24, 0x05	; 5
    1ca0:	90 e0       	ldi	r25, 0x00	; 0
    1ca2:	90 93 6f 00 	sts	0x006F, r25
    1ca6:	80 93 6e 00 	sts	0x006E, r24
    1caa:	02 c0       	rjmp	.+4      	; 0x1cb0 <main+0x372>
			}

			while(!(PINB&(1<<3)))
			{
				show_segments();
    1cac:	0e 94 a3 05 	call	0xb46	; 0xb46 <show_segments>
			{
				min0=9;
				min1=5;
			}

			while(!(PINB&(1<<3)))
    1cb0:	e6 e3       	ldi	r30, 0x36	; 54
    1cb2:	f0 e0       	ldi	r31, 0x00	; 0
    1cb4:	80 81       	ld	r24, Z
    1cb6:	88 2f       	mov	r24, r24
    1cb8:	90 e0       	ldi	r25, 0x00	; 0
    1cba:	88 70       	andi	r24, 0x08	; 8
    1cbc:	90 70       	andi	r25, 0x00	; 0
    1cbe:	00 97       	sbiw	r24, 0x00	; 0
    1cc0:	a9 f3       	breq	.-22     	; 0x1cac <main+0x36e>
			}
		}


		//incrementing minutes PB4
		if((!(PINB&(1<<4))) && pause_flag)
    1cc2:	e6 e3       	ldi	r30, 0x36	; 54
    1cc4:	f0 e0       	ldi	r31, 0x00	; 0
    1cc6:	80 81       	ld	r24, Z
    1cc8:	88 2f       	mov	r24, r24
    1cca:	90 e0       	ldi	r25, 0x00	; 0
    1ccc:	80 71       	andi	r24, 0x10	; 16
    1cce:	90 70       	andi	r25, 0x00	; 0
    1cd0:	00 97       	sbiw	r24, 0x00	; 0
    1cd2:	09 f0       	breq	.+2      	; 0x1cd6 <main+0x398>
    1cd4:	46 c0       	rjmp	.+140    	; 0x1d62 <main+0x424>
    1cd6:	80 91 76 00 	lds	r24, 0x0076
    1cda:	88 23       	and	r24, r24
    1cdc:	09 f4       	brne	.+2      	; 0x1ce0 <main+0x3a2>
    1cde:	41 c0       	rjmp	.+130    	; 0x1d62 <main+0x424>
		{
			if(min0!=9)
    1ce0:	80 91 70 00 	lds	r24, 0x0070
    1ce4:	90 91 71 00 	lds	r25, 0x0071
    1ce8:	89 30       	cpi	r24, 0x09	; 9
    1cea:	91 05       	cpc	r25, r1
    1cec:	51 f0       	breq	.+20     	; 0x1d02 <main+0x3c4>
			{
				min0++;
    1cee:	80 91 70 00 	lds	r24, 0x0070
    1cf2:	90 91 71 00 	lds	r25, 0x0071
    1cf6:	01 96       	adiw	r24, 0x01	; 1
    1cf8:	90 93 71 00 	sts	0x0071, r25
    1cfc:	80 93 70 00 	sts	0x0070, r24
    1d00:	27 c0       	rjmp	.+78     	; 0x1d50 <main+0x412>
			}
			else if(min0==9 && min1!=5)
    1d02:	80 91 70 00 	lds	r24, 0x0070
    1d06:	90 91 71 00 	lds	r25, 0x0071
    1d0a:	89 30       	cpi	r24, 0x09	; 9
    1d0c:	91 05       	cpc	r25, r1
    1d0e:	a9 f4       	brne	.+42     	; 0x1d3a <main+0x3fc>
    1d10:	80 91 6e 00 	lds	r24, 0x006E
    1d14:	90 91 6f 00 	lds	r25, 0x006F
    1d18:	85 30       	cpi	r24, 0x05	; 5
    1d1a:	91 05       	cpc	r25, r1
    1d1c:	71 f0       	breq	.+28     	; 0x1d3a <main+0x3fc>
			{
				min0=0;
    1d1e:	10 92 71 00 	sts	0x0071, r1
    1d22:	10 92 70 00 	sts	0x0070, r1
				min1++;
    1d26:	80 91 6e 00 	lds	r24, 0x006E
    1d2a:	90 91 6f 00 	lds	r25, 0x006F
    1d2e:	01 96       	adiw	r24, 0x01	; 1
    1d30:	90 93 6f 00 	sts	0x006F, r25
    1d34:	80 93 6e 00 	sts	0x006E, r24
    1d38:	0b c0       	rjmp	.+22     	; 0x1d50 <main+0x412>
			}
			else
			{
				min0=0;
    1d3a:	10 92 71 00 	sts	0x0071, r1
    1d3e:	10 92 70 00 	sts	0x0070, r1
				min1=0;
    1d42:	10 92 6f 00 	sts	0x006F, r1
    1d46:	10 92 6e 00 	sts	0x006E, r1
    1d4a:	02 c0       	rjmp	.+4      	; 0x1d50 <main+0x412>
			}

			while(!(PINB&(1<<4)))
			{
				show_segments();
    1d4c:	0e 94 a3 05 	call	0xb46	; 0xb46 <show_segments>
			{
				min0=0;
				min1=0;
			}

			while(!(PINB&(1<<4)))
    1d50:	e6 e3       	ldi	r30, 0x36	; 54
    1d52:	f0 e0       	ldi	r31, 0x00	; 0
    1d54:	80 81       	ld	r24, Z
    1d56:	88 2f       	mov	r24, r24
    1d58:	90 e0       	ldi	r25, 0x00	; 0
    1d5a:	80 71       	andi	r24, 0x10	; 16
    1d5c:	90 70       	andi	r25, 0x00	; 0
    1d5e:	00 97       	sbiw	r24, 0x00	; 0
    1d60:	a9 f3       	breq	.-22     	; 0x1d4c <main+0x40e>
			}
		}


		//decrementing seconds PB5
		if((!(PINB&(1<<5))) && pause_flag)
    1d62:	e6 e3       	ldi	r30, 0x36	; 54
    1d64:	f0 e0       	ldi	r31, 0x00	; 0
    1d66:	80 81       	ld	r24, Z
    1d68:	88 2f       	mov	r24, r24
    1d6a:	90 e0       	ldi	r25, 0x00	; 0
    1d6c:	80 72       	andi	r24, 0x20	; 32
    1d6e:	90 70       	andi	r25, 0x00	; 0
    1d70:	00 97       	sbiw	r24, 0x00	; 0
    1d72:	09 f0       	breq	.+2      	; 0x1d76 <main+0x438>
    1d74:	55 c0       	rjmp	.+170    	; 0x1e20 <main+0x4e2>
    1d76:	80 91 76 00 	lds	r24, 0x0076
    1d7a:	88 23       	and	r24, r24
    1d7c:	09 f4       	brne	.+2      	; 0x1d80 <main+0x442>
    1d7e:	50 c0       	rjmp	.+160    	; 0x1e20 <main+0x4e2>
		{
			if(sec0!=0)
    1d80:	80 91 6c 00 	lds	r24, 0x006C
    1d84:	90 91 6d 00 	lds	r25, 0x006D
    1d88:	00 97       	sbiw	r24, 0x00	; 0
    1d8a:	51 f0       	breq	.+20     	; 0x1da0 <main+0x462>
			{
				sec0--;
    1d8c:	80 91 6c 00 	lds	r24, 0x006C
    1d90:	90 91 6d 00 	lds	r25, 0x006D
    1d94:	01 97       	sbiw	r24, 0x01	; 1
    1d96:	90 93 6d 00 	sts	0x006D, r25
    1d9a:	80 93 6c 00 	sts	0x006C, r24
    1d9e:	37 c0       	rjmp	.+110    	; 0x1e0e <main+0x4d0>
			}
			else if(sec0==0 && sec1!=0)
    1da0:	80 91 6c 00 	lds	r24, 0x006C
    1da4:	90 91 6d 00 	lds	r25, 0x006D
    1da8:	00 97       	sbiw	r24, 0x00	; 0
    1daa:	b1 f4       	brne	.+44     	; 0x1dd8 <main+0x49a>
    1dac:	80 91 6a 00 	lds	r24, 0x006A
    1db0:	90 91 6b 00 	lds	r25, 0x006B
    1db4:	00 97       	sbiw	r24, 0x00	; 0
    1db6:	81 f0       	breq	.+32     	; 0x1dd8 <main+0x49a>
			{
				sec0=9;
    1db8:	89 e0       	ldi	r24, 0x09	; 9
    1dba:	90 e0       	ldi	r25, 0x00	; 0
    1dbc:	90 93 6d 00 	sts	0x006D, r25
    1dc0:	80 93 6c 00 	sts	0x006C, r24
				sec1--;
    1dc4:	80 91 6a 00 	lds	r24, 0x006A
    1dc8:	90 91 6b 00 	lds	r25, 0x006B
    1dcc:	01 97       	sbiw	r24, 0x01	; 1
    1dce:	90 93 6b 00 	sts	0x006B, r25
    1dd2:	80 93 6a 00 	sts	0x006A, r24
    1dd6:	1b c0       	rjmp	.+54     	; 0x1e0e <main+0x4d0>
			}
			else if(sec0==0 && sec1==0)
    1dd8:	80 91 6c 00 	lds	r24, 0x006C
    1ddc:	90 91 6d 00 	lds	r25, 0x006D
    1de0:	00 97       	sbiw	r24, 0x00	; 0
    1de2:	a9 f4       	brne	.+42     	; 0x1e0e <main+0x4d0>
    1de4:	80 91 6a 00 	lds	r24, 0x006A
    1de8:	90 91 6b 00 	lds	r25, 0x006B
    1dec:	00 97       	sbiw	r24, 0x00	; 0
    1dee:	79 f4       	brne	.+30     	; 0x1e0e <main+0x4d0>
			{
				sec0=9;
    1df0:	89 e0       	ldi	r24, 0x09	; 9
    1df2:	90 e0       	ldi	r25, 0x00	; 0
    1df4:	90 93 6d 00 	sts	0x006D, r25
    1df8:	80 93 6c 00 	sts	0x006C, r24
				sec1=5;
    1dfc:	85 e0       	ldi	r24, 0x05	; 5
    1dfe:	90 e0       	ldi	r25, 0x00	; 0
    1e00:	90 93 6b 00 	sts	0x006B, r25
    1e04:	80 93 6a 00 	sts	0x006A, r24
    1e08:	02 c0       	rjmp	.+4      	; 0x1e0e <main+0x4d0>
			}

			while(!(PINB&(1<<5)))
			{
				show_segments();
    1e0a:	0e 94 a3 05 	call	0xb46	; 0xb46 <show_segments>
			{
				sec0=9;
				sec1=5;
			}

			while(!(PINB&(1<<5)))
    1e0e:	e6 e3       	ldi	r30, 0x36	; 54
    1e10:	f0 e0       	ldi	r31, 0x00	; 0
    1e12:	80 81       	ld	r24, Z
    1e14:	88 2f       	mov	r24, r24
    1e16:	90 e0       	ldi	r25, 0x00	; 0
    1e18:	80 72       	andi	r24, 0x20	; 32
    1e1a:	90 70       	andi	r25, 0x00	; 0
    1e1c:	00 97       	sbiw	r24, 0x00	; 0
    1e1e:	a9 f3       	breq	.-22     	; 0x1e0a <main+0x4cc>
			}
		}


		//incrementing seconds PB6
		if((!(PINB&(1<<6))) && pause_flag)
    1e20:	e6 e3       	ldi	r30, 0x36	; 54
    1e22:	f0 e0       	ldi	r31, 0x00	; 0
    1e24:	80 81       	ld	r24, Z
    1e26:	88 2f       	mov	r24, r24
    1e28:	90 e0       	ldi	r25, 0x00	; 0
    1e2a:	80 74       	andi	r24, 0x40	; 64
    1e2c:	90 70       	andi	r25, 0x00	; 0
    1e2e:	00 97       	sbiw	r24, 0x00	; 0
    1e30:	09 f0       	breq	.+2      	; 0x1e34 <main+0x4f6>
    1e32:	ec cd       	rjmp	.-1064   	; 0x1a0c <main+0xce>
    1e34:	80 91 76 00 	lds	r24, 0x0076
    1e38:	88 23       	and	r24, r24
    1e3a:	09 f4       	brne	.+2      	; 0x1e3e <main+0x500>
    1e3c:	e7 cd       	rjmp	.-1074   	; 0x1a0c <main+0xce>
		{
			if(sec0!=9)
    1e3e:	80 91 6c 00 	lds	r24, 0x006C
    1e42:	90 91 6d 00 	lds	r25, 0x006D
    1e46:	89 30       	cpi	r24, 0x09	; 9
    1e48:	91 05       	cpc	r25, r1
    1e4a:	51 f0       	breq	.+20     	; 0x1e60 <main+0x522>
			{
				sec0++;
    1e4c:	80 91 6c 00 	lds	r24, 0x006C
    1e50:	90 91 6d 00 	lds	r25, 0x006D
    1e54:	01 96       	adiw	r24, 0x01	; 1
    1e56:	90 93 6d 00 	sts	0x006D, r25
    1e5a:	80 93 6c 00 	sts	0x006C, r24
    1e5e:	27 c0       	rjmp	.+78     	; 0x1eae <main+0x570>
			}
			else if(sec0==9 && sec1!=5)
    1e60:	80 91 6c 00 	lds	r24, 0x006C
    1e64:	90 91 6d 00 	lds	r25, 0x006D
    1e68:	89 30       	cpi	r24, 0x09	; 9
    1e6a:	91 05       	cpc	r25, r1
    1e6c:	a9 f4       	brne	.+42     	; 0x1e98 <main+0x55a>
    1e6e:	80 91 6a 00 	lds	r24, 0x006A
    1e72:	90 91 6b 00 	lds	r25, 0x006B
    1e76:	85 30       	cpi	r24, 0x05	; 5
    1e78:	91 05       	cpc	r25, r1
    1e7a:	71 f0       	breq	.+28     	; 0x1e98 <main+0x55a>
			{
				sec0=0;
    1e7c:	10 92 6d 00 	sts	0x006D, r1
    1e80:	10 92 6c 00 	sts	0x006C, r1
				sec1++;
    1e84:	80 91 6a 00 	lds	r24, 0x006A
    1e88:	90 91 6b 00 	lds	r25, 0x006B
    1e8c:	01 96       	adiw	r24, 0x01	; 1
    1e8e:	90 93 6b 00 	sts	0x006B, r25
    1e92:	80 93 6a 00 	sts	0x006A, r24
    1e96:	0b c0       	rjmp	.+22     	; 0x1eae <main+0x570>
			}
			else
			{
				sec0=0;
    1e98:	10 92 6d 00 	sts	0x006D, r1
    1e9c:	10 92 6c 00 	sts	0x006C, r1
				sec1=0;
    1ea0:	10 92 6b 00 	sts	0x006B, r1
    1ea4:	10 92 6a 00 	sts	0x006A, r1
    1ea8:	02 c0       	rjmp	.+4      	; 0x1eae <main+0x570>
			}

			while(!(PINB&(1<<6)))
			{
				show_segments();
    1eaa:	0e 94 a3 05 	call	0xb46	; 0xb46 <show_segments>
			{
				sec0=0;
				sec1=0;
			}

			while(!(PINB&(1<<6)))
    1eae:	e6 e3       	ldi	r30, 0x36	; 54
    1eb0:	f0 e0       	ldi	r31, 0x00	; 0
    1eb2:	80 81       	ld	r24, Z
    1eb4:	88 2f       	mov	r24, r24
    1eb6:	90 e0       	ldi	r25, 0x00	; 0
    1eb8:	80 74       	andi	r24, 0x40	; 64
    1eba:	90 70       	andi	r25, 0x00	; 0
    1ebc:	00 97       	sbiw	r24, 0x00	; 0
    1ebe:	a9 f3       	breq	.-22     	; 0x1eaa <main+0x56c>
    1ec0:	a5 cd       	rjmp	.-1206   	; 0x1a0c <main+0xce>

00001ec2 <__prologue_saves__>:
    1ec2:	2f 92       	push	r2
    1ec4:	3f 92       	push	r3
    1ec6:	4f 92       	push	r4
    1ec8:	5f 92       	push	r5
    1eca:	6f 92       	push	r6
    1ecc:	7f 92       	push	r7
    1ece:	8f 92       	push	r8
    1ed0:	9f 92       	push	r9
    1ed2:	af 92       	push	r10
    1ed4:	bf 92       	push	r11
    1ed6:	cf 92       	push	r12
    1ed8:	df 92       	push	r13
    1eda:	ef 92       	push	r14
    1edc:	ff 92       	push	r15
    1ede:	0f 93       	push	r16
    1ee0:	1f 93       	push	r17
    1ee2:	cf 93       	push	r28
    1ee4:	df 93       	push	r29
    1ee6:	cd b7       	in	r28, 0x3d	; 61
    1ee8:	de b7       	in	r29, 0x3e	; 62
    1eea:	ca 1b       	sub	r28, r26
    1eec:	db 0b       	sbc	r29, r27
    1eee:	0f b6       	in	r0, 0x3f	; 63
    1ef0:	f8 94       	cli
    1ef2:	de bf       	out	0x3e, r29	; 62
    1ef4:	0f be       	out	0x3f, r0	; 63
    1ef6:	cd bf       	out	0x3d, r28	; 61
    1ef8:	09 94       	ijmp

00001efa <__epilogue_restores__>:
    1efa:	2a 88       	ldd	r2, Y+18	; 0x12
    1efc:	39 88       	ldd	r3, Y+17	; 0x11
    1efe:	48 88       	ldd	r4, Y+16	; 0x10
    1f00:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f02:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f04:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f06:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f08:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f0a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f0c:	b9 84       	ldd	r11, Y+9	; 0x09
    1f0e:	c8 84       	ldd	r12, Y+8	; 0x08
    1f10:	df 80       	ldd	r13, Y+7	; 0x07
    1f12:	ee 80       	ldd	r14, Y+6	; 0x06
    1f14:	fd 80       	ldd	r15, Y+5	; 0x05
    1f16:	0c 81       	ldd	r16, Y+4	; 0x04
    1f18:	1b 81       	ldd	r17, Y+3	; 0x03
    1f1a:	aa 81       	ldd	r26, Y+2	; 0x02
    1f1c:	b9 81       	ldd	r27, Y+1	; 0x01
    1f1e:	ce 0f       	add	r28, r30
    1f20:	d1 1d       	adc	r29, r1
    1f22:	0f b6       	in	r0, 0x3f	; 63
    1f24:	f8 94       	cli
    1f26:	de bf       	out	0x3e, r29	; 62
    1f28:	0f be       	out	0x3f, r0	; 63
    1f2a:	cd bf       	out	0x3d, r28	; 61
    1f2c:	ed 01       	movw	r28, r26
    1f2e:	08 95       	ret

00001f30 <_exit>:
    1f30:	f8 94       	cli

00001f32 <__stop_program>:
    1f32:	ff cf       	rjmp	.-2      	; 0x1f32 <__stop_program>
